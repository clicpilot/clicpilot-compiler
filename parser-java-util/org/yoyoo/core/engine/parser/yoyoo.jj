/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. yoyoo.jj */
/*@egen*/options {
  JAVA_UNICODE_ESCAPE = true;
                         
  JDK_VERSION = "1.5";
  UNICODE_INPUT = true;
               
                 
  STATIC = false;
                                                
                        
  USER_CHAR_STREAM = true;
  COMMON_TOKEN_ACTION=true;
}

PARSER_BEGIN(YoyooParser) 
package org.yoyoo.core.engine.parser;
import java.io.*;
import org.yoyoo.core.engine.compile.*;


public class YoyooParser/*@bgen(jjtree)*/implements YoyooParserTreeConstants/*@egen*/ {/*@bgen(jjtree)*/
  protected JJTYoyooParserState jjtree = new JJTYoyooParserState();

/*@egen*/

   private YoyooEnvironment env;
   private CompilationUnit unit;



  public static CompilationUnit parse(YoyooEnvironment env, File f) throws ParseException, FileNotFoundException, UnsupportedEncodingException {
	   
	   YoyooParser parser = new YoyooParser(new SimpleCharStream(new InputStreamReader(new FileInputStream(f), "UTF-8")));
	   parser.unit = new CompilationUnit(env, f);
	   parser.env = env;
	   parser.unit.compileStart();	   
	   parser.parseCompilationUnit();
	   parser.unit.compileEnd();
	   if(parser.token_source.containsPreProcessorStm()) {
       	   parser.unit.setPreProcessorTokenList(parser.token_source.getPreProcessorTokens());
       }
	   return parser.unit;

  }

  public static CompilationUnit parse(YoyooEnvironment env, String src, File f) throws ParseException, UnsupportedEncodingException {
	   
	   YoyooParser parser = new YoyooParser(new SimpleCharStream(new StringReader(src)));
	   parser.unit = new CompilationUnit(env, src, f);
	   parser.env = env;
	   parser.unit.compileStart();
	   parser.parseCompilationUnit();
	   parser.unit.compileEnd();
	   if(parser.token_source.containsPreProcessorStm()) {
       	   parser.unit.setPreProcessorTokenList(parser.token_source.getPreProcessorTokens());
       }
	   return parser.unit;

  }
  
   public static CompilationUnit parse(YoyooEnvironment env, String src) throws ParseException, UnsupportedEncodingException {
	   
	   YoyooParser parser = new YoyooParser(new SimpleCharStream(new StringReader(src)));
	   parser.unit = new CompilationUnit(env, src);
	   parser.env = env;
	   parser.unit.compileStart();
	   parser.parseCompilationUnit();
	   parser.unit.compileEnd();
	   if(parser.token_source.containsPreProcessorStm()) {
       	   parser.unit.setPreProcessorTokenList(parser.token_source.getPreProcessorTokens());
       }
	   return parser.unit;

  }

  
	void jjtreeOpenNodeScope(Node n)
	{
		((SimpleNode)n).first_token = this.getToken(1);
	}
		
	void jjtreeCloseNodeScope(Node n)
	{
		((SimpleNode)n).last_token = this.getToken(0);
	}

}
PARSER_END(YoyooParser)

TOKEN_MGR_DECLS:
{
  // As far as I can tell, JavaCC only runs the "common" token action
  // on true tokens, and not on special (read: comment) tokens.  Thus,
  // we have to explicitly invoke this CommonTokenAction on comment
  // tokens.
  private int lastMacroStartIdx = 0;
  
  private boolean containPreProcessorStm = false;
  
  private java.util.List<Token> preProcessorTokenList;
  
  private Token lastToken;
  
  boolean containsPreProcessorStm() {
  	return containPreProcessorStm;
  }
  
  java.util.List<Token> getPreProcessorTokens() {
  	return preProcessorTokenList;
  }
  
  void CommonTokenAction(Token t)
  {
  	
    t.beginPos = ((SimpleCharStream)input_stream).getBeginOffset();
    t.endPos = ((SimpleCharStream)input_stream).getEndOffset();
    
    if (t.specialToken != null) {
		Token special = t.specialToken;
		if(lastToken!=null) {
			lastToken.specialToken = t.specialToken;
		}
		if(special.kind == FORMAL_COMMENT) {
                
		} else if(special.kind == PREPROCESSOR_BLOCK) {
 			special.beginPos = ((SimpleCharStream)input_stream).getLastTokenBeginOffset();
    		special.endPos = ((SimpleCharStream)input_stream).getLastTokenEndOffset();
			if(!containPreProcessorStm)
				containPreProcessorStm = true;
			if(preProcessorTokenList == null) {
				preProcessorTokenList = new java.util.ArrayList<Token>();
			}
        	preProcessorTokenList.add(special);
		} else if(special.kind == PREPROCESSOR_BLOCK2) {
 			special.beginPos = ((SimpleCharStream)input_stream).getLastTokenBeginOffset();
    		special.endPos = ((SimpleCharStream)input_stream).getLastTokenEndOffset();
			if(!containPreProcessorStm)
				containPreProcessorStm = true;
			if(preProcessorTokenList == null) {
				preProcessorTokenList = new java.util.ArrayList<Token>();
			}
        	preProcessorTokenList.add(special);
		} else if(special.kind == PREPROCESSOR_VARIABLE_BLOCK) {
 			special.beginPos = ((SimpleCharStream)input_stream).getLastTokenBeginOffset();
    		special.endPos = ((SimpleCharStream)input_stream).getLastTokenEndOffset();
			if(!containPreProcessorStm)
				containPreProcessorStm = true;
			if(preProcessorTokenList == null) {
				preProcessorTokenList = new java.util.ArrayList<Token>();
			}
        	preProcessorTokenList.add(special);
		} else if(special.kind == SINGLE_LINE_COMMENT) {
        
		} else if(special.kind == MULTI_LINE_COMMENT) {

		}
	}
	lastToken = t;
  }
}

/* WHITE SPACE */

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
| "\f"
}

/* COMMENTS */

MORE :
{
  "//" : IN_SINGLE_LINE_COMMENT
|
  <"/**" ~["/"]> { input_stream.backup(1); } : IN_FORMAL_COMMENT
|
  <"/*#" ~["/"]> { input_stream.backup(1); } : IN_PREPROCESSOR_BLOCK
|
  <"//~/*#" ~["/"]> { input_stream.backup(1); } : IN_PREPROCESSOR_BLOCK2   
|
  <"/*?" ~["/"]> { input_stream.backup(1); } : IN_PREPROCESSOR_VARIABLE_BLOCK       
|
  "/*" : IN_MULTI_LINE_COMMENT
}

<IN_SINGLE_LINE_COMMENT>
SPECIAL_TOKEN :
{
  <SINGLE_LINE_COMMENT: "\n" | "\r" | "\r\n" > : DEFAULT
}

<IN_FORMAL_COMMENT>
SPECIAL_TOKEN :
{
  <FORMAL_COMMENT: "*/" > : DEFAULT
}

<IN_PREPROCESSOR_BLOCK>
SPECIAL_TOKEN :
{
  <PREPROCESSOR_BLOCK: "#*/" > : DEFAULT
}

<IN_PREPROCESSOR_BLOCK2>
SPECIAL_TOKEN :
{
  <PREPROCESSOR_BLOCK2: "//~#*/" > : DEFAULT
}

<IN_PREPROCESSOR_VARIABLE_BLOCK>
SPECIAL_TOKEN :
{
  <PREPROCESSOR_VARIABLE_BLOCK: "?*/" > : DEFAULT
}

<IN_MULTI_LINE_COMMENT>
SPECIAL_TOKEN :
{
  <MULTI_LINE_COMMENT: "*/" > : DEFAULT
}

<IN_SINGLE_LINE_COMMENT, IN_FORMAL_COMMENT, IN_MULTI_LINE_COMMENT, IN_PREPROCESSOR_BLOCK, IN_PREPROCESSOR_BLOCK2, IN_PREPROCESSOR_VARIABLE_BLOCK>
MORE :
{
  < ~[] >
}

/* RESERVED WORDS AND LITERALS */

TOKEN :
{
  < ABSTRACT: "abstract" >
| < BOOLEAN: "boolean" >
| < BREAK: "break" >
| < BYTE: "byte" >
| < CASE: "case" >
| < CATCH: "catch" >
| < CHAR: "char" >
| < CONST: "const" >
| < CONTINUE: "continue" >
| < _DEFAULT: "default" >
| < DO: "do" >
| < DOUBLE: "double" >
| < ELSE: "else" >
| < EXTENDS: "extends" >
| < FALSE: "false" >
| < FINAL: "final" >
| < FINALLY: "finally" >
| < FLOAT: "float" >
| < FOR: "for" >
| < GOTO: "goto" >
| < IF: "if" >
| < IMPLEMENTS: "implements" >
| < IMPORT: "import" >
| < INSTANCEOF: "instanceof" >
| < INT: "int" >
| < INTERFACE: "interface" >
| < LONG: "long" >
| < NATIVE: "native" >
| < NEW: "new" >
| < NULL: "null" >
| < PACKAGE: "package">
| < PRIVATE: "private" >
| < PROTECTED: "protected" >
| < PUBLIC: "public" >
| < RETURN: "return" >
| < SHORT: "short" >
| < STATIC: "static" >
| < SUPER: "super" >
| < SWITCH: "switch" >
| < THIS: "this" >
| < THROW: "throw" >
| < THROWS: "throws" >
| < SYNCHRONIZED: "synchronized" >
| < TRUE: "true" >
| < TRY: "try" >
| < VOID: "void" >
| < WHILE: "while" >
| < STRING: "string" >
| < YOYOOEXPR: "expr" >
| < YOYOOREF: "ref" >
}


/* LITERALS */

TOKEN :
{
  < INTEGER_LITERAL:
        <DECIMAL_LITERAL> (["l","L","s","S"])?
      | <HEX_LITERAL> (["l","L","s","S"])?
      | <OCTAL_LITERAL> (["l","L","s","S"])?
  >
|
  < #DECIMAL_LITERAL: ["1"-"9"] (["0"-"9"])* >
|
  < #HEX_LITERAL: "0" ["x","X"] (["0"-"9","a"-"f","A"-"F"])+ >
|
  < #OCTAL_LITERAL: "0" (["0"-"7"])* >
|
  < FLOATING_POINT_LITERAL:
        (["0"-"9"])+ "." (["0"-"9"])* (<EXPONENT>)? (["f","F","d","D"])?
      | "." (["0"-"9"])+ (<EXPONENT>)? (["f","F","d","D"])?
      | (["0"-"9"])+ <EXPONENT> (["f","F","d","D"])?
      | (["0"-"9"])+ (<EXPONENT>)? ["f","F","d","D"]
  >
|
  < #EXPONENT: ["e","E"] (["+","-"])? (["0"-"9"])+ >
|
  < CHARACTER_LITERAL:
      "'"
      (   (~["'","\\","\n","\r"])
        | ("\\"
            ( ["n","t","b","r","f","\\","'","\""]
            | ["0"-"7"] ( ["0"-"7"] )?
            | ["0"-"3"] ["0"-"7"] ["0"-"7"]
            )
          )
      )
      "'"
  >
|
  < STRING_LITERAL:
      "\""
      (   (~["\"","\\","\n","\r"])
        | ("\\"
            ( ["n","t","b","r","f","\\","'","\""]
            | ["0"-"7"] ( ["0"-"7"] )?
            | ["0"-"3"] ["0"-"7"] ["0"-"7"]
            )
          )
      )*
      "\""
  >
|
  < MULTILINE_STRING_LITERAL:
      "\""
      (   (~["\"","\\"])
        | ("\\"
            ( ["n","t","b","r","f","\\","'","\""]
            | ["0"-"7"] ( ["0"-"7"] )?
            | ["0"-"3"] ["0"-"7"] ["0"-"7"]
            | "u" ["0"-"9","a"-"f","A"-"F"] ["0"-"9","a"-"f","A"-"F"] ["0"-"9","a"-"f","A"-"F"] ["0"-"9","a"-"f","A"-"F"]
            | "$"		
            )
          )
      )*
      "\""
  >  
  
}

/* SEPARATORS */

TOKEN :
{
  < LPAREN: "(" >
| < RPAREN: ")" >
| < LBRACE: "{" >
| < RBRACE: "}" >
| < LBRACKET: "[" >
| < RBRACKET: "]" >
| < SEMICOLON: ";" >
| < COMMA: "," >
| < DOT: "." >
}

/* OPERATORS */

TOKEN :
{
  < ASSIGN: "=" >
| < GT: ">" >
| < LT: "<" >
| < BANG: "!" >
| < HOOK: "?" >
| < COLON: ":" >
| < EQ: "==" >
| < LE: "<=" >
| < GE: ">=" >
| < NE: "!=" >
| < SC_OR: "||" >
| < SC_AND: "&&" >
| < INCR: "++" >
| < DECR: "--" >
| < PLUS: "+" >
| < MINUS: "-" >
| < STAR: "*" >
| < SLASH: "/" >
| < REM: "%" >
| < PLUSASSIGN: "+=" >
| < MINUSASSIGN: "-=" >
| < STARASSIGN: "*=" >
| < SLASHASSIGN: "/=" >
| < SPECIALEXPRSTART: "/*<" >
| < SPECIALEXPREND: ">*/" >
}

/* IDENTIFIERS */

TOKEN :
{
  < IDENTIFIER: <LETTER> (<PART_LETTER>)* >
|
  < #LETTER:
      [  // all chars for which Character.isIdentifierStart is true
         "$",
         "A"-"Z",
         "_",
         "a"-"z",
         "\u00a2"-"\u00a5",
         "\u00aa",
         "\u00b5",
         "\u00ba",
         "\u00c0"-"\u00d6",
         "\u00d8"-"\u00f6",
         "\u00f8"-"\u021f",
         "\u0222"-"\u0233",
         "\u0250"-"\u02ad",
         "\u02b0"-"\u02b8",
         "\u02bb"-"\u02c1",
         "\u02d0"-"\u02d1",
         "\u02e0"-"\u02e4",
         "\u02ee",
         "\u037a",
         "\u0386",
         "\u0388"-"\u038a",
         "\u038c",
         "\u038e"-"\u03a1",
         "\u03a3"-"\u03ce",
         "\u03d0"-"\u03d7",
         "\u03da"-"\u03f3",
         "\u0400"-"\u0481",
         "\u048c"-"\u04c4",
         "\u04c7"-"\u04c8",
         "\u04cb"-"\u04cc",
         "\u04d0"-"\u04f5",
         "\u04f8"-"\u04f9",
         "\u0531"-"\u0556",
         "\u0559",
         "\u0561"-"\u0587",
         "\u05d0"-"\u05ea",
         "\u05f0"-"\u05f2",
         "\u0621"-"\u063a",
         "\u0640"-"\u064a",
         "\u0671"-"\u06d3",
         "\u06d5",
         "\u06e5"-"\u06e6",
         "\u06fa"-"\u06fc",
         "\u0710",
         "\u0712"-"\u072c",
         "\u0780"-"\u07a5",
         "\u0905"-"\u0939",
         "\u093d",
         "\u0950",
         "\u0958"-"\u0961",
         "\u0985"-"\u098c",
         "\u098f"-"\u0990",
         "\u0993"-"\u09a8",
         "\u09aa"-"\u09b0",
         "\u09b2",
         "\u09b6"-"\u09b9",
         "\u09dc"-"\u09dd",
         "\u09df"-"\u09e1",
         "\u09f0"-"\u09f3",
         "\u0a05"-"\u0a0a",
         "\u0a0f"-"\u0a10",
         "\u0a13"-"\u0a28",
         "\u0a2a"-"\u0a30",
         "\u0a32"-"\u0a33",
         "\u0a35"-"\u0a36",
         "\u0a38"-"\u0a39",
         "\u0a59"-"\u0a5c",
         "\u0a5e",
         "\u0a72"-"\u0a74",
         "\u0a85"-"\u0a8b",
         "\u0a8d",
         "\u0a8f"-"\u0a91",
         "\u0a93"-"\u0aa8",
         "\u0aaa"-"\u0ab0",
         "\u0ab2"-"\u0ab3",
         "\u0ab5"-"\u0ab9",
         "\u0abd",
         "\u0ad0",
         "\u0ae0",
         "\u0b05"-"\u0b0c",
         "\u0b0f"-"\u0b10",
         "\u0b13"-"\u0b28",
         "\u0b2a"-"\u0b30",
         "\u0b32"-"\u0b33",
         "\u0b36"-"\u0b39",
         "\u0b3d",
         "\u0b5c"-"\u0b5d",
         "\u0b5f"-"\u0b61",
         "\u0b85"-"\u0b8a",
         "\u0b8e"-"\u0b90",
         "\u0b92"-"\u0b95",
         "\u0b99"-"\u0b9a",
         "\u0b9c",
         "\u0b9e"-"\u0b9f",
         "\u0ba3"-"\u0ba4",
         "\u0ba8"-"\u0baa",
         "\u0bae"-"\u0bb5",
         "\u0bb7"-"\u0bb9",
         "\u0c05"-"\u0c0c",
         "\u0c0e"-"\u0c10",
         "\u0c12"-"\u0c28",
         "\u0c2a"-"\u0c33",
         "\u0c35"-"\u0c39",
         "\u0c60"-"\u0c61",
         "\u0c85"-"\u0c8c",
         "\u0c8e"-"\u0c90",
         "\u0c92"-"\u0ca8",
         "\u0caa"-"\u0cb3",
         "\u0cb5"-"\u0cb9",
         "\u0cde",
         "\u0ce0"-"\u0ce1",
         "\u0d05"-"\u0d0c",
         "\u0d0e"-"\u0d10",
         "\u0d12"-"\u0d28",
         "\u0d2a"-"\u0d39",
         "\u0d60"-"\u0d61",
         "\u0d85"-"\u0d96",
         "\u0d9a"-"\u0db1",
         "\u0db3"-"\u0dbb",
         "\u0dbd",
         "\u0dc0"-"\u0dc6",
         "\u0e01"-"\u0e30",
         "\u0e32"-"\u0e33",
         "\u0e3f"-"\u0e46",
         "\u0e81"-"\u0e82",
         "\u0e84",
         "\u0e87"-"\u0e88",
         "\u0e8a",
         "\u0e8d",
         "\u0e94"-"\u0e97",
         "\u0e99"-"\u0e9f",
         "\u0ea1"-"\u0ea3",
         "\u0ea5",
         "\u0ea7",
         "\u0eaa"-"\u0eab",
         "\u0ead"-"\u0eb0",
         "\u0eb2"-"\u0eb3",
         "\u0ebd",
         "\u0ec0"-"\u0ec4",
         "\u0ec6",
         "\u0edc"-"\u0edd",
         "\u0f00",
         "\u0f40"-"\u0f47",
         "\u0f49"-"\u0f6a",
         "\u0f88"-"\u0f8b",
         "\u1000"-"\u1021",
         "\u1023"-"\u1027",
         "\u1029"-"\u102a",
         "\u1050"-"\u1055",
         "\u10a0"-"\u10c5",
         "\u10d0"-"\u10f6",
         "\u1100"-"\u1159",
         "\u115f"-"\u11a2",
         "\u11a8"-"\u11f9",
         "\u1200"-"\u1206",
         "\u1208"-"\u1246",
         "\u1248",
         "\u124a"-"\u124d",
         "\u1250"-"\u1256",
         "\u1258",
         "\u125a"-"\u125d",
         "\u1260"-"\u1286",
         "\u1288",
         "\u128a"-"\u128d",
         "\u1290"-"\u12ae",
         "\u12b0",
         "\u12b2"-"\u12b5",
         "\u12b8"-"\u12be",
         "\u12c0",
         "\u12c2"-"\u12c5",
         "\u12c8"-"\u12ce",
         "\u12d0"-"\u12d6",
         "\u12d8"-"\u12ee",
         "\u12f0"-"\u130e",
         "\u1310",
         "\u1312"-"\u1315",
         "\u1318"-"\u131e",
         "\u1320"-"\u1346",
         "\u1348"-"\u135a",
         "\u13a0"-"\u13f4",
         "\u1401"-"\u166c",
         "\u166f"-"\u1676",
         "\u1681"-"\u169a",
         "\u16a0"-"\u16ea",
         "\u1780"-"\u17b3",
         "\u17db",
         "\u1820"-"\u1877",
         "\u1880"-"\u18a8",
         "\u1e00"-"\u1e9b",
         "\u1ea0"-"\u1ef9",
         "\u1f00"-"\u1f15",
         "\u1f18"-"\u1f1d",
         "\u1f20"-"\u1f45",
         "\u1f48"-"\u1f4d",
         "\u1f50"-"\u1f57",
         "\u1f59",
         "\u1f5b",
         "\u1f5d",
         "\u1f5f"-"\u1f7d",
         "\u1f80"-"\u1fb4",
         "\u1fb6"-"\u1fbc",
         "\u1fbe",
         "\u1fc2"-"\u1fc4",
         "\u1fc6"-"\u1fcc",
         "\u1fd0"-"\u1fd3",
         "\u1fd6"-"\u1fdb",
         "\u1fe0"-"\u1fec",
         "\u1ff2"-"\u1ff4",
         "\u1ff6"-"\u1ffc",
         "\u203f"-"\u2040",
         "\u207f",
         "\u20a0"-"\u20af",
         "\u2102",
         "\u2107",
         "\u210a"-"\u2113",
         "\u2115",
         "\u2119"-"\u211d",
         "\u2124",
         "\u2126",
         "\u2128",
         "\u212a"-"\u212d",
         "\u212f"-"\u2131",
         "\u2133"-"\u2139",
         "\u2160"-"\u2183",
         "\u3005"-"\u3007",
         "\u3021"-"\u3029",
         "\u3031"-"\u3035",
         "\u3038"-"\u303a",
         "\u3041"-"\u3094",
         "\u309d"-"\u309e",
         "\u30a1"-"\u30fe",
         "\u3105"-"\u312c",
         "\u3131"-"\u318e",
         "\u31a0"-"\u31b7",
         "\u3400"-"\u4db5",
         "\u4e00"-"\u9fa5",
         "\ua000"-"\ua48c",
         "\uac00"-"\ud7a3",
         "\uf900"-"\ufa2d",
         "\ufb00"-"\ufb06",
         "\ufb13"-"\ufb17",
         "\ufb1d",
         "\ufb1f"-"\ufb28",
         "\ufb2a"-"\ufb36",
         "\ufb38"-"\ufb3c",
         "\ufb3e",
         "\ufb40"-"\ufb41",
         "\ufb43"-"\ufb44",
         "\ufb46"-"\ufbb1",
         "\ufbd3"-"\ufd3d",
         "\ufd50"-"\ufd8f",
         "\ufd92"-"\ufdc7",
         "\ufdf0"-"\ufdfb",
         "\ufe33"-"\ufe34",
         "\ufe4d"-"\ufe4f",
         "\ufe69",
         "\ufe70"-"\ufe72",
         "\ufe74",
         "\ufe76"-"\ufefc",
         "\uff04",
         "\uff21"-"\uff3a",
         "\uff3f",
         "\uff41"-"\uff5a",
         "\uff65"-"\uffbe",
         "\uffc2"-"\uffc7",
         "\uffca"-"\uffcf",
         "\uffd2"-"\uffd7",
         "\uffda"-"\uffdc",
         "\uffe0"-"\uffe1",
         "\uffe5"-"\uffe6"
      ]
  >
|
  < #PART_LETTER:
      [  // all chars for which Character.isIdentifierPart is true
         "\u0000"-"\u0008",
         "\u000e"-"\u001b",
         "$",
         "0"-"9",
         "A"-"Z",
         "_",
         "a"-"z",
         "\u007f"-"\u009f",
         "\u00a2"-"\u00a5",
         "\u00aa",
         "\u00b5",
         "\u00ba",
         "\u00c0"-"\u00d6",
         "\u00d8"-"\u00f6",
         "\u00f8"-"\u021f",
         "\u0222"-"\u0233",
         "\u0250"-"\u02ad",
         "\u02b0"-"\u02b8",
         "\u02bb"-"\u02c1",
         "\u02d0"-"\u02d1",
         "\u02e0"-"\u02e4",
         "\u02ee",
         "\u0300"-"\u034e",
         "\u0360"-"\u0362",
         "\u037a",
         "\u0386",
         "\u0388"-"\u038a",
         "\u038c",
         "\u038e"-"\u03a1",
         "\u03a3"-"\u03ce",
         "\u03d0"-"\u03d7",
         "\u03da"-"\u03f3",
         "\u0400"-"\u0481",
         "\u0483"-"\u0486",
         "\u048c"-"\u04c4",
         "\u04c7"-"\u04c8",
         "\u04cb"-"\u04cc",
         "\u04d0"-"\u04f5",
         "\u04f8"-"\u04f9",
         "\u0531"-"\u0556",
         "\u0559",
         "\u0561"-"\u0587",
         "\u0591"-"\u05a1",
         "\u05a3"-"\u05b9",
         "\u05bb"-"\u05bd",
         "\u05bf",
         "\u05c1"-"\u05c2",
         "\u05c4",
         "\u05d0"-"\u05ea",
         "\u05f0"-"\u05f2",
         "\u0621"-"\u063a",
         "\u0640"-"\u0655",
         "\u0660"-"\u0669",
         "\u0670"-"\u06d3",
         "\u06d5"-"\u06dc",
         "\u06df"-"\u06e8",
         "\u06ea"-"\u06ed",
         "\u06f0"-"\u06fc",
         "\u070f"-"\u072c",
         "\u0730"-"\u074a",
         "\u0780"-"\u07b0",
         "\u0901"-"\u0903",
         "\u0905"-"\u0939",
         "\u093c"-"\u094d",
         "\u0950"-"\u0954",
         "\u0958"-"\u0963",
         "\u0966"-"\u096f",
         "\u0981"-"\u0983",
         "\u0985"-"\u098c",
         "\u098f"-"\u0990",
         "\u0993"-"\u09a8",
         "\u09aa"-"\u09b0",
         "\u09b2",
         "\u09b6"-"\u09b9",
         "\u09bc",
         "\u09be"-"\u09c4",
         "\u09c7"-"\u09c8",
         "\u09cb"-"\u09cd",
         "\u09d7",
         "\u09dc"-"\u09dd",
         "\u09df"-"\u09e3",
         "\u09e6"-"\u09f3",
         "\u0a02",
         "\u0a05"-"\u0a0a",
         "\u0a0f"-"\u0a10",
         "\u0a13"-"\u0a28",
         "\u0a2a"-"\u0a30",
         "\u0a32"-"\u0a33",
         "\u0a35"-"\u0a36",
         "\u0a38"-"\u0a39",
         "\u0a3c",
         "\u0a3e"-"\u0a42",
         "\u0a47"-"\u0a48",
         "\u0a4b"-"\u0a4d",
         "\u0a59"-"\u0a5c",
         "\u0a5e",
         "\u0a66"-"\u0a74",
         "\u0a81"-"\u0a83",
         "\u0a85"-"\u0a8b",
         "\u0a8d",
         "\u0a8f"-"\u0a91",
         "\u0a93"-"\u0aa8",
         "\u0aaa"-"\u0ab0",
         "\u0ab2"-"\u0ab3",
         "\u0ab5"-"\u0ab9",
         "\u0abc"-"\u0ac5",
         "\u0ac7"-"\u0ac9",
         "\u0acb"-"\u0acd",
         "\u0ad0",
         "\u0ae0",
         "\u0ae6"-"\u0aef",
         "\u0b01"-"\u0b03",
         "\u0b05"-"\u0b0c",
         "\u0b0f"-"\u0b10",
         "\u0b13"-"\u0b28",
         "\u0b2a"-"\u0b30",
         "\u0b32"-"\u0b33",
         "\u0b36"-"\u0b39",
         "\u0b3c"-"\u0b43",
         "\u0b47"-"\u0b48",
         "\u0b4b"-"\u0b4d",
         "\u0b56"-"\u0b57",
         "\u0b5c"-"\u0b5d",
         "\u0b5f"-"\u0b61",
         "\u0b66"-"\u0b6f",
         "\u0b82"-"\u0b83",
         "\u0b85"-"\u0b8a",
         "\u0b8e"-"\u0b90",
         "\u0b92"-"\u0b95",
         "\u0b99"-"\u0b9a",
         "\u0b9c",
         "\u0b9e"-"\u0b9f",
         "\u0ba3"-"\u0ba4",
         "\u0ba8"-"\u0baa",
         "\u0bae"-"\u0bb5",
         "\u0bb7"-"\u0bb9",
         "\u0bbe"-"\u0bc2",
         "\u0bc6"-"\u0bc8",
         "\u0bca"-"\u0bcd",
         "\u0bd7",
         "\u0be7"-"\u0bef",
         "\u0c01"-"\u0c03",
         "\u0c05"-"\u0c0c",
         "\u0c0e"-"\u0c10",
         "\u0c12"-"\u0c28",
         "\u0c2a"-"\u0c33",
         "\u0c35"-"\u0c39",
         "\u0c3e"-"\u0c44",
         "\u0c46"-"\u0c48",
         "\u0c4a"-"\u0c4d",
         "\u0c55"-"\u0c56",
         "\u0c60"-"\u0c61",
         "\u0c66"-"\u0c6f",
         "\u0c82"-"\u0c83",
         "\u0c85"-"\u0c8c",
         "\u0c8e"-"\u0c90",
         "\u0c92"-"\u0ca8",
         "\u0caa"-"\u0cb3",
         "\u0cb5"-"\u0cb9",
         "\u0cbe"-"\u0cc4",
         "\u0cc6"-"\u0cc8",
         "\u0cca"-"\u0ccd",
         "\u0cd5"-"\u0cd6",
         "\u0cde",
         "\u0ce0"-"\u0ce1",
         "\u0ce6"-"\u0cef",
         "\u0d02"-"\u0d03",
         "\u0d05"-"\u0d0c",
         "\u0d0e"-"\u0d10",
         "\u0d12"-"\u0d28",
         "\u0d2a"-"\u0d39",
         "\u0d3e"-"\u0d43",
         "\u0d46"-"\u0d48",
         "\u0d4a"-"\u0d4d",
         "\u0d57",
         "\u0d60"-"\u0d61",
         "\u0d66"-"\u0d6f",
         "\u0d82"-"\u0d83",
         "\u0d85"-"\u0d96",
         "\u0d9a"-"\u0db1",
         "\u0db3"-"\u0dbb",
         "\u0dbd",
         "\u0dc0"-"\u0dc6",
         "\u0dca",
         "\u0dcf"-"\u0dd4",
         "\u0dd6",
         "\u0dd8"-"\u0ddf",
         "\u0df2"-"\u0df3",
         "\u0e01"-"\u0e3a",
         "\u0e3f"-"\u0e4e",
         "\u0e50"-"\u0e59",
         "\u0e81"-"\u0e82",
         "\u0e84",
         "\u0e87"-"\u0e88",
         "\u0e8a",
         "\u0e8d",
         "\u0e94"-"\u0e97",
         "\u0e99"-"\u0e9f",
         "\u0ea1"-"\u0ea3",
         "\u0ea5",
         "\u0ea7",
         "\u0eaa"-"\u0eab",
         "\u0ead"-"\u0eb9",
         "\u0ebb"-"\u0ebd",
         "\u0ec0"-"\u0ec4",
         "\u0ec6",
         "\u0ec8"-"\u0ecd",
         "\u0ed0"-"\u0ed9",
         "\u0edc"-"\u0edd",
         "\u0f00",
         "\u0f18"-"\u0f19",
         "\u0f20"-"\u0f29",
         "\u0f35",
         "\u0f37",
         "\u0f39",
         "\u0f3e"-"\u0f47",
         "\u0f49"-"\u0f6a",
         "\u0f71"-"\u0f84",
         "\u0f86"-"\u0f8b",
         "\u0f90"-"\u0f97",
         "\u0f99"-"\u0fbc",
         "\u0fc6",
         "\u1000"-"\u1021",
         "\u1023"-"\u1027",
         "\u1029"-"\u102a",
         "\u102c"-"\u1032",
         "\u1036"-"\u1039",
         "\u1040"-"\u1049",
         "\u1050"-"\u1059",
         "\u10a0"-"\u10c5",
         "\u10d0"-"\u10f6",
         "\u1100"-"\u1159",
         "\u115f"-"\u11a2",
         "\u11a8"-"\u11f9",
         "\u1200"-"\u1206",
         "\u1208"-"\u1246",
         "\u1248",
         "\u124a"-"\u124d",
         "\u1250"-"\u1256",
         "\u1258",
         "\u125a"-"\u125d",
         "\u1260"-"\u1286",
         "\u1288",
         "\u128a"-"\u128d",
         "\u1290"-"\u12ae",
         "\u12b0",
         "\u12b2"-"\u12b5",
         "\u12b8"-"\u12be",
         "\u12c0",
         "\u12c2"-"\u12c5",
         "\u12c8"-"\u12ce",
         "\u12d0"-"\u12d6",
         "\u12d8"-"\u12ee",
         "\u12f0"-"\u130e",
         "\u1310",
         "\u1312"-"\u1315",
         "\u1318"-"\u131e",
         "\u1320"-"\u1346",
         "\u1348"-"\u135a",
         "\u1369"-"\u1371",
         "\u13a0"-"\u13f4",
         "\u1401"-"\u166c",
         "\u166f"-"\u1676",
         "\u1681"-"\u169a",
         "\u16a0"-"\u16ea",
         "\u1780"-"\u17d3",
         "\u17db",
         "\u17e0"-"\u17e9",
         "\u180b"-"\u180e",
         "\u1810"-"\u1819",
         "\u1820"-"\u1877",
         "\u1880"-"\u18a9",
         "\u1e00"-"\u1e9b",
         "\u1ea0"-"\u1ef9",
         "\u1f00"-"\u1f15",
         "\u1f18"-"\u1f1d",
         "\u1f20"-"\u1f45",
         "\u1f48"-"\u1f4d",
         "\u1f50"-"\u1f57",
         "\u1f59",
         "\u1f5b",
         "\u1f5d",
         "\u1f5f"-"\u1f7d",
         "\u1f80"-"\u1fb4",
         "\u1fb6"-"\u1fbc",
         "\u1fbe",
         "\u1fc2"-"\u1fc4",
         "\u1fc6"-"\u1fcc",
         "\u1fd0"-"\u1fd3",
         "\u1fd6"-"\u1fdb",
         "\u1fe0"-"\u1fec",
         "\u1ff2"-"\u1ff4",
         "\u1ff6"-"\u1ffc",
         "\u200c"-"\u200f",
         "\u202a"-"\u202e",
         "\u203f"-"\u2040",
         "\u206a"-"\u206f",
         "\u207f",
         "\u20a0"-"\u20af",
         "\u20d0"-"\u20dc",
         "\u20e1",
         "\u2102",
         "\u2107",
         "\u210a"-"\u2113",
         "\u2115",
         "\u2119"-"\u211d",
         "\u2124",
         "\u2126",
         "\u2128",
         "\u212a"-"\u212d",
         "\u212f"-"\u2131",
         "\u2133"-"\u2139",
         "\u2160"-"\u2183",
         "\u3005"-"\u3007",
         "\u3021"-"\u302f",
         "\u3031"-"\u3035",
         "\u3038"-"\u303a",
         "\u3041"-"\u3094",
         "\u3099"-"\u309a",
         "\u309d"-"\u309e",
         "\u30a1"-"\u30fe",
         "\u3105"-"\u312c",
         "\u3131"-"\u318e",
         "\u31a0"-"\u31b7",
         "\u3400"-"\u4db5",
         "\u4e00"-"\u9fa5",
         "\ua000"-"\ua48c",
         "\uac00"-"\ud7a3",
         "\uf900"-"\ufa2d",
         "\ufb00"-"\ufb06",
         "\ufb13"-"\ufb17",
         "\ufb1d"-"\ufb28",
         "\ufb2a"-"\ufb36",
         "\ufb38"-"\ufb3c",
         "\ufb3e",
         "\ufb40"-"\ufb41",
         "\ufb43"-"\ufb44",
         "\ufb46"-"\ufbb1",
         "\ufbd3"-"\ufd3d",
         "\ufd50"-"\ufd8f",
         "\ufd92"-"\ufdc7",
         "\ufdf0"-"\ufdfb",
         "\ufe20"-"\ufe23",
         "\ufe33"-"\ufe34",
         "\ufe4d"-"\ufe4f",
         "\ufe69",
         "\ufe70"-"\ufe72",
         "\ufe74",
         "\ufe76"-"\ufefc",
         "\ufeff",
         "\uff04",
         "\uff10"-"\uff19",
         "\uff21"-"\uff3a",
         "\uff3f",
         "\uff41"-"\uff5a",
         "\uff65"-"\uffbe",
         "\uffc2"-"\uffc7",
         "\uffca"-"\uffcf",
         "\uffd2"-"\uffd7",
         "\uffda"-"\uffdc",
         "\uffe0"-"\uffe1",
         "\uffe5"-"\uffe6",
         "\ufff9"-"\ufffb"
      ]
  >
}



/*****************************************
 * THE YOYOO LANGUAGE GRAMMAR STARTS HERE *
 *****************************************/

/*
 * Program structuring syntax follows.
 */

void parseCompilationUnit()                  :
{/*@bgen(jjtree) CompilationUnit */
        YoyooCompilationUnit jjtn000 = new YoyooCompilationUnit(JJTCOMPILATIONUNIT);
        boolean jjtc000 = true;
        jjtree.openNodeScope(jjtn000);
        jjtreeOpenNodeScope(jjtn000);
/*@egen*/
	unit.setCompilationUnitNode(jjtn000);
}
{/*@bgen(jjtree) CompilationUnit */
  try {
/*@egen*/
  [ PackageDeclaration()]
  ( ImportDeclaration())*
  ( TypeDeclaration())*
  <EOF>/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void PackageDeclaration()              :
{/*@bgen(jjtree) PackageDecl */
        YoyooPackageDecl jjtn000 = new YoyooPackageDecl(JJTPACKAGEDECL);
        boolean jjtc000 = true;
        jjtree.openNodeScope(jjtn000);
        jjtreeOpenNodeScope(jjtn000);
/*@egen*/
	String name = null;
}
{/*@bgen(jjtree) PackageDecl */
  try {
/*@egen*/
  "package" name = Name() ";"/*@bgen(jjtree)*/
  {
    jjtree.closeNodeScope(jjtn000, true);
    jjtc000 = false;
    jjtreeCloseNodeScope(jjtn000);
  }
/*@egen*/
  {  
  	jjtn000.jjtAccept(unit, name);	
  }/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void ImportDeclaration()             :
{/*@bgen(jjtree) ImportDecl */
        YoyooImportDecl jjtn000 = new YoyooImportDecl(JJTIMPORTDECL);
        boolean jjtc000 = true;
        jjtree.openNodeScope(jjtn000);
        jjtreeOpenNodeScope(jjtn000);
/*@egen*/
	String name = null;
}
{/*@bgen(jjtree) ImportDecl */
  try {
/*@egen*/
  "import" name = Name()  ";"/*@bgen(jjtree)*/
  {
    jjtree.closeNodeScope(jjtn000, true);
    jjtc000 = false;
    jjtreeCloseNodeScope(jjtn000);
  }
/*@egen*/
  { 
  	jjtn000.jjtAccept(unit, name);	
  }/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void TypeDeclaration()           :
{/*@bgen(jjtree) TypeDecl */
        YoyooTypeDecl jjtn000 = new YoyooTypeDecl(JJTTYPEDECL);
        boolean jjtc000 = true;
        jjtree.openNodeScope(jjtn000);
        jjtreeOpenNodeScope(jjtn000);
/*@egen*/
	boolean isInterface = false;
	boolean isAbstract = false;
}
{/*@bgen(jjtree) TypeDecl */
  try {
/*@egen*/

  Modifier() ["abstract"/*@bgen(jjtree) Abstract */
                        {
                          YoyooAbstract jjtn001 = new YoyooAbstract(JJTABSTRACT);
                          boolean jjtc001 = true;
                          jjtree.openNodeScope(jjtn001);
                          jjtreeOpenNodeScope(jjtn001);
                        }
                        try {
/*@egen*//*@bgen(jjtree)*/
                        {
                          jjtree.closeNodeScope(jjtn001, true);
                          jjtc001 = false;
                          jjtreeCloseNodeScope(jjtn001);
                        }
/*@egen*/{isAbstract=true;}/*@bgen(jjtree)*/
                        } finally {
                          if (jjtc001) {
                            jjtree.closeNodeScope(jjtn001, true);
                            jjtreeCloseNodeScope(jjtn001);
                          }
                        }
/*@egen*/         ]/*@bgen(jjtree) TypeDeclName */
                                                     {
                                                       YoyooTypeDeclName jjtn002 = new YoyooTypeDeclName(JJTTYPEDECLNAME);
                                                       boolean jjtc002 = true;
                                                       jjtree.openNodeScope(jjtn002);
                                                       jjtreeOpenNodeScope(jjtn002);
                                                     }
                                                     try {
/*@egen*/ (<IDENTIFIER>/*@bgen(jjtree)*/
                                                                  {
                                                                    jjtree.closeNodeScope(jjtn002, true);
                                                                    jjtc002 = false;
                                                                    jjtreeCloseNodeScope(jjtn002);
                                                                  }
/*@egen*/{isInterface=false;}|<INTERFACE>/*@bgen(jjtree)*/
                                                                                                  {
                                                                                                    jjtree.closeNodeScope(jjtn002, true);
                                                                                                    jjtc002 = false;
                                                                                                    jjtreeCloseNodeScope(jjtn002);
                                                                                                  }
/*@egen*/{isInterface=true;})/*@bgen(jjtree)*/
                                                     } finally {
                                                       if (jjtc002) {
                                                         jjtree.closeNodeScope(jjtn002, true);
                                                         jjtreeCloseNodeScope(jjtn002);
                                                       }
                                                     }
/*@egen*/             
  UnmodifiedClassDeclaration(isInterface, isAbstract)/*@bgen(jjtree)*/
  {
    jjtree.closeNodeScope(jjtn000, true);
    jjtc000 = false;
    jjtreeCloseNodeScope(jjtn000);
  }
/*@egen*/
  {
  	jjtn000.childrenAccept(unit, jjtn000);
  }

|
  ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
  
}

/*
 * Declaration syntax follows.
 */

void Modifier()          :
{/*@bgen(jjtree) Modifier */
  YoyooModifier jjtn000 = new YoyooModifier(JJTMODIFIER);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Modifier */
        try {
/*@egen*/
	["public" | "protected" | "private"]/*@bgen(jjtree)*/
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
            jjtreeCloseNodeScope(jjtn000);
          }
        }
/*@egen*/ 
}

void UnmodifiedClassDeclaration(boolean isInterface, boolean isAbstract)       :
{}
{/*@bgen(jjtree) DeclarationName */
  {
    YoyooDeclarationName jjtn001 = new YoyooDeclarationName(JJTDECLARATIONNAME);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  <IDENTIFIER>/*@bgen(jjtree)*/
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/                 
  [ TypeParameters()]
  [ ExtendsList(isInterface) ]
  [ ImplementsList(isInterface) ]
  	
  ClassBody(isInterface, isAbstract)

  
}

void ExtendsList(boolean isInterface) :
{/*@bgen(jjtree) ExtendsList */
   YoyooExtendsList jjtn000 = new YoyooExtendsList(JJTEXTENDSLIST);
   boolean jjtc000 = true;
   jjtree.openNodeScope(jjtn000);
   jjtreeOpenNodeScope(jjtn000);
/*@egen*/
   boolean extendsMoreThanOne = false;
}
{/*@bgen(jjtree) ExtendsList */
   try {
/*@egen*/
   "extends" (/*@bgen(jjtree) ExtendsName */
              {
                YoyooExtendsName jjtn001 = new YoyooExtendsName(JJTEXTENDSNAME);
                boolean jjtc001 = true;
                jjtree.openNodeScope(jjtn001);
                jjtreeOpenNodeScope(jjtn001);
              }
              try {
/*@egen*/ClassOrInterfaceType()/*@bgen(jjtree)*/
              } catch (Throwable jjte001) {
                if (jjtc001) {
                  jjtree.clearNodeScope(jjtn001);
                  jjtc001 = false;
                } else {
                  jjtree.popNode();
                }
                if (jjte001 instanceof RuntimeException) {
                  throw (RuntimeException)jjte001;
                }
                if (jjte001 instanceof ParseException) {
                  throw (ParseException)jjte001;
                }
                throw (Error)jjte001;
              } finally {
                if (jjtc001) {
                  jjtree.closeNodeScope(jjtn001, true);
                  jjtreeCloseNodeScope(jjtn001);
                }
              }
/*@egen*/            )
   ( "," (/*@bgen(jjtree) ExtendsName */
          {
            YoyooExtendsName jjtn002 = new YoyooExtendsName(JJTEXTENDSNAME);
            boolean jjtc002 = true;
            jjtree.openNodeScope(jjtn002);
            jjtreeOpenNodeScope(jjtn002);
          }
          try {
/*@egen*/ClassOrInterfaceType()/*@bgen(jjtree)*/
          } catch (Throwable jjte002) {
            if (jjtc002) {
              jjtree.clearNodeScope(jjtn002);
              jjtc002 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte002 instanceof RuntimeException) {
              throw (RuntimeException)jjte002;
            }
            if (jjte002 instanceof ParseException) {
              throw (ParseException)jjte002;
            }
            throw (Error)jjte002;
          } finally {
            if (jjtc002) {
              jjtree.closeNodeScope(jjtn002, true);
              jjtreeCloseNodeScope(jjtn002);
            }
          }
/*@egen*/            ) { extendsMoreThanOne = true; } )*/*@bgen(jjtree)*/
   {
     jjtree.closeNodeScope(jjtn000, true);
     jjtc000 = false;
     jjtreeCloseNodeScope(jjtn000);
   }
/*@egen*/
   {
      if (extendsMoreThanOne && !isInterface)
         throw new ParseException("A class cannot extend more than one other class");
   }/*@bgen(jjtree)*/
   } catch (Throwable jjte000) {
     if (jjtc000) {
       jjtree.clearNodeScope(jjtn000);
       jjtc000 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte000 instanceof RuntimeException) {
       throw (RuntimeException)jjte000;
     }
     if (jjte000 instanceof ParseException) {
       throw (ParseException)jjte000;
     }
     throw (Error)jjte000;
   } finally {
     if (jjtc000) {
       jjtree.closeNodeScope(jjtn000, true);
       jjtreeCloseNodeScope(jjtn000);
     }
   }
/*@egen*/
}

void ImplementsList(boolean isInterface):
{/*@bgen(jjtree) ImplementsList */
  YoyooImplementsList jjtn000 = new YoyooImplementsList(JJTIMPLEMENTSLIST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ImplementsList */
   try {
/*@egen*/
   "implements" (/*@bgen(jjtree) ImplementsName */
                 {
                   YoyooImplementsName jjtn001 = new YoyooImplementsName(JJTIMPLEMENTSNAME);
                   boolean jjtc001 = true;
                   jjtree.openNodeScope(jjtn001);
                   jjtreeOpenNodeScope(jjtn001);
                 }
                 try {
/*@egen*/ClassOrInterfaceType()/*@bgen(jjtree)*/
                 } catch (Throwable jjte001) {
                   if (jjtc001) {
                     jjtree.clearNodeScope(jjtn001);
                     jjtc001 = false;
                   } else {
                     jjtree.popNode();
                   }
                   if (jjte001 instanceof RuntimeException) {
                     throw (RuntimeException)jjte001;
                   }
                   if (jjte001 instanceof ParseException) {
                     throw (ParseException)jjte001;
                   }
                   throw (Error)jjte001;
                 } finally {
                   if (jjtc001) {
                     jjtree.closeNodeScope(jjtn001, true);
                     jjtreeCloseNodeScope(jjtn001);
                   }
                 }
/*@egen*/               )
   ( "," (/*@bgen(jjtree) ImplementsName */
          {
            YoyooImplementsName jjtn002 = new YoyooImplementsName(JJTIMPLEMENTSNAME);
            boolean jjtc002 = true;
            jjtree.openNodeScope(jjtn002);
            jjtreeOpenNodeScope(jjtn002);
          }
          try {
/*@egen*/ClassOrInterfaceType()/*@bgen(jjtree)*/
          } catch (Throwable jjte002) {
            if (jjtc002) {
              jjtree.clearNodeScope(jjtn002);
              jjtc002 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte002 instanceof RuntimeException) {
              throw (RuntimeException)jjte002;
            }
            if (jjte002 instanceof ParseException) {
              throw (ParseException)jjte002;
            }
            throw (Error)jjte002;
          } finally {
            if (jjtc002) {
              jjtree.closeNodeScope(jjtn002, true);
              jjtreeCloseNodeScope(jjtn002);
            }
          }
/*@egen*/               ) )*/*@bgen(jjtree)*/
   {
     jjtree.closeNodeScope(jjtn000, true);
     jjtc000 = false;
     jjtreeCloseNodeScope(jjtn000);
   }
/*@egen*/
   {
      if (isInterface)
         throw new ParseException("An interface cannot implement other interfaces");
   }/*@bgen(jjtree)*/
   } catch (Throwable jjte000) {
     if (jjtc000) {
       jjtree.clearNodeScope(jjtn000);
       jjtc000 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte000 instanceof RuntimeException) {
       throw (RuntimeException)jjte000;
     }
     if (jjte000 instanceof ParseException) {
       throw (ParseException)jjte000;
     }
     throw (Error)jjte000;
   } finally {
     if (jjtc000) {
       jjtree.closeNodeScope(jjtn000, true);
       jjtreeCloseNodeScope(jjtn000);
     }
   }
/*@egen*/
}

void ClassBody(boolean isInterface, boolean isAbstract)       :
{}
{
  "{" 
  ( ClassBodyDeclaration(isInterface, isAbstract) )* 
  "}"
}

void ClassBodyDeclaration(boolean isInterface, boolean isAbstract)       :
{}
{	
  LOOKAHEAD( ConstructorDeclarationLookahead() )
  ConstructorDeclaration()
  {
      if (isInterface)
         throw new ParseException("An interface cannot have constructor");
  }
|
  LOOKAHEAD( MethodDeclarationLookahead() )
  MethodDeclaration(isInterface, isAbstract)
|
  FieldDeclaration()
|
  EmptyStatement()  	  
}
// This production is to determine lookahead only.
void ConstructorDeclarationLookahead()       :
{}
{
  Modifier() [/*@bgen(jjtree) Static */
              {
                YoyooStatic jjtn001 = new YoyooStatic(JJTSTATIC);
                boolean jjtc001 = true;
                jjtree.openNodeScope(jjtn001);
                jjtreeOpenNodeScope(jjtn001);
              }
              try {
/*@egen*/"static"/*@bgen(jjtree)*/
              } finally {
                if (jjtc001) {
                  jjtree.closeNodeScope(jjtn001, true);
                  jjtreeCloseNodeScope(jjtn001);
                }
              }
/*@egen*/       ]
  <IDENTIFIER> "("
}

void ConstructorDeclaration()             :
{/*@bgen(jjtree) Constructor */
        YoyooConstructor jjtn000 = new YoyooConstructor(JJTCONSTRUCTOR);
        boolean jjtc000 = true;
        jjtree.openNodeScope(jjtn000);
        jjtreeOpenNodeScope(jjtn000);
/*@egen*/
	Token t;
}
{/*@bgen(jjtree) Constructor */
  try {
/*@egen*/
  Modifier() [/*@bgen(jjtree) Static */
              {
                YoyooStatic jjtn001 = new YoyooStatic(JJTSTATIC);
                boolean jjtc001 = true;
                jjtree.openNodeScope(jjtn001);
                jjtreeOpenNodeScope(jjtn001);
              }
              try {
/*@egen*/"static"/*@bgen(jjtree)*/
              } finally {
                if (jjtc001) {
                  jjtree.closeNodeScope(jjtn001, true);
                  jjtreeCloseNodeScope(jjtn001);
                }
              }
/*@egen*/       ]/*@bgen(jjtree) ConstructorName */
  {
    YoyooConstructorName jjtn002 = new YoyooConstructorName(JJTCONSTRUCTORNAME);
    boolean jjtc002 = true;
    jjtree.openNodeScope(jjtn002);
    jjtreeOpenNodeScope(jjtn002);
  }
  try {
/*@egen*/
  <IDENTIFIER>/*@bgen(jjtree)*/
  } finally {
    if (jjtc002) {
      jjtree.closeNodeScope(jjtn002, true);
      jjtreeCloseNodeScope(jjtn002);
    }
  }
/*@egen*/                 
  FormalParameters() [ "throws" ThrowsNameList()   ]/*@bgen(jjtree) ConstructorBody */
  {
    YoyooConstructorBody jjtn003 = new YoyooConstructorBody(JJTCONSTRUCTORBODY);
    boolean jjtc003 = true;
    jjtree.openNodeScope(jjtn003);
    jjtreeOpenNodeScope(jjtn003);
  }
  try {
/*@egen*/
  (
  "{"
    [ LOOKAHEAD(ExplicitConstructorInvocation()) ExplicitConstructorInvocation() ]
    ( BlockStatement() )*
  "}"
  )/*@bgen(jjtree)*/
  } catch (Throwable jjte003) {
    if (jjtc003) {
      jjtree.clearNodeScope(jjtn003);
      jjtc003 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte003 instanceof RuntimeException) {
      throw (RuntimeException)jjte003;
    }
    if (jjte003 instanceof ParseException) {
      throw (ParseException)jjte003;
    }
    throw (Error)jjte003;
  } finally {
    if (jjtc003) {
      jjtree.closeNodeScope(jjtn003, true);
      jjtreeCloseNodeScope(jjtn003);
    }
  }
/*@egen*/                /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void ExplicitConstructorInvocation()                      :
{/*@bgen(jjtree) ExplicitConstructor */
  YoyooExplicitConstructor jjtn000 = new YoyooExplicitConstructor(JJTEXPLICITCONSTRUCTOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ExplicitConstructor */
  try {
/*@egen*/
  LOOKAHEAD("this" Arguments() ";")/*@bgen(jjtree) ThisExplicitConstructor */
                                    {
                                      YoyooThisExplicitConstructor jjtn001 = new YoyooThisExplicitConstructor(JJTTHISEXPLICITCONSTRUCTOR);
                                      boolean jjtc001 = true;
                                      jjtree.openNodeScope(jjtn001);
                                      jjtreeOpenNodeScope(jjtn001);
                                    }
                                    try {
/*@egen*/ "this"/*@bgen(jjtree)*/
                                    } finally {
                                      if (jjtc001) {
                                        jjtree.closeNodeScope(jjtn001, true);
                                        jjtreeCloseNodeScope(jjtn001);
                                      }
                                    }
/*@egen*/                         /*@bgen(jjtree) Arguments */
                                                                    {
                                                                      YoyooArguments jjtn002 = new YoyooArguments(JJTARGUMENTS);
                                                                      boolean jjtc002 = true;
                                                                      jjtree.openNodeScope(jjtn002);
                                                                      jjtreeOpenNodeScope(jjtn002);
                                                                    }
                                                                    try {
/*@egen*/ Arguments()/*@bgen(jjtree)*/
                                                                    } catch (Throwable jjte002) {
                                                                      if (jjtc002) {
                                                                        jjtree.clearNodeScope(jjtn002);
                                                                        jjtc002 = false;
                                                                      } else {
                                                                        jjtree.popNode();
                                                                      }
                                                                      if (jjte002 instanceof RuntimeException) {
                                                                        throw (RuntimeException)jjte002;
                                                                      }
                                                                      if (jjte002 instanceof ParseException) {
                                                                        throw (ParseException)jjte002;
                                                                      }
                                                                      throw (Error)jjte002;
                                                                    } finally {
                                                                      if (jjtc002) {
                                                                        jjtree.closeNodeScope(jjtn002, true);
                                                                        jjtreeCloseNodeScope(jjtn002);
                                                                      }
                                                                    }
/*@egen*/           ";"
|
  [ LOOKAHEAD(2) PrimaryExpression(0) "." ]/*@bgen(jjtree) SuperExplicitConstructor */
                                            {
                                              YoyooSuperExplicitConstructor jjtn003 = new YoyooSuperExplicitConstructor(JJTSUPEREXPLICITCONSTRUCTOR);
                                              boolean jjtc003 = true;
                                              jjtree.openNodeScope(jjtn003);
                                              jjtreeOpenNodeScope(jjtn003);
                                            }
                                            try {
/*@egen*/ "super"/*@bgen(jjtree)*/
                                            } finally {
                                              if (jjtc003) {
                                                jjtree.closeNodeScope(jjtn003, true);
                                                jjtreeCloseNodeScope(jjtn003);
                                              }
                                            }
/*@egen*/                         /*@bgen(jjtree) Arguments */
                                                                             {
                                                                               YoyooArguments jjtn004 = new YoyooArguments(JJTARGUMENTS);
                                                                               boolean jjtc004 = true;
                                                                               jjtree.openNodeScope(jjtn004);
                                                                               jjtreeOpenNodeScope(jjtn004);
                                                                             }
                                                                             try {
/*@egen*/ Arguments()/*@bgen(jjtree)*/
                                                                             } catch (Throwable jjte004) {
                                                                               if (jjtc004) {
                                                                                 jjtree.clearNodeScope(jjtn004);
                                                                                 jjtc004 = false;
                                                                               } else {
                                                                                 jjtree.popNode();
                                                                               }
                                                                               if (jjte004 instanceof RuntimeException) {
                                                                                 throw (RuntimeException)jjte004;
                                                                               }
                                                                               if (jjte004 instanceof ParseException) {
                                                                                 throw (ParseException)jjte004;
                                                                               }
                                                                               throw (Error)jjte004;
                                                                             } finally {
                                                                               if (jjtc004) {
                                                                                 jjtree.closeNodeScope(jjtn004, true);
                                                                                 jjtreeCloseNodeScope(jjtn004);
                                                                               }
                                                                             }
/*@egen*/           ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

// This production is to determine lookahead only.
void MethodDeclarationLookahead()       :
{}
{
  Modifier() [/*@bgen(jjtree) Static */
              {
                YoyooStatic jjtn001 = new YoyooStatic(JJTSTATIC);
                boolean jjtc001 = true;
                jjtree.openNodeScope(jjtn001);
                jjtreeOpenNodeScope(jjtn001);
              }
              try {
/*@egen*/"static"/*@bgen(jjtree)*/
              } finally {
                if (jjtc001) {
                  jjtree.closeNodeScope(jjtn001, true);
                  jjtreeCloseNodeScope(jjtn001);
                }
              }
/*@egen*/       ] [/*@bgen(jjtree) Abstract */
                                {
                                  YoyooAbstract jjtn002 = new YoyooAbstract(JJTABSTRACT);
                                  boolean jjtc002 = true;
                                  jjtree.openNodeScope(jjtn002);
                                  jjtreeOpenNodeScope(jjtn002);
                                }
                                try {
/*@egen*/"abstract"/*@bgen(jjtree)*/
                                } finally {
                                  if (jjtc002) {
                                    jjtree.closeNodeScope(jjtn002, true);
                                    jjtreeCloseNodeScope(jjtn002);
                                  }
                                }
/*@egen*/         ]
  ResultType() <IDENTIFIER> "("
}

void MethodDeclaration(boolean isInterface, boolean isAbstract)             :
{/*@bgen(jjtree) MedthodDecl */
  YoyooMedthodDecl jjtn000 = new YoyooMedthodDecl(JJTMEDTHODDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) MedthodDecl */
  try {
/*@egen*/
  Modifier() ([/*@bgen(jjtree) Static */
               {
                 YoyooStatic jjtn001 = new YoyooStatic(JJTSTATIC);
                 boolean jjtc001 = true;
                 jjtree.openNodeScope(jjtn001);
                 jjtreeOpenNodeScope(jjtn001);
               }
               try {
/*@egen*/"static"/*@bgen(jjtree)*/
               } finally {
                 if (jjtc001) {
                   jjtree.closeNodeScope(jjtn001, true);
                   jjtreeCloseNodeScope(jjtn001);
                 }
               }
/*@egen*/       ] [/*@bgen(jjtree) Abstract */
                                 {
                                   YoyooAbstract jjtn002 = new YoyooAbstract(JJTABSTRACT);
                                   boolean jjtc002 = true;
                                   jjtree.openNodeScope(jjtn002);
                                   jjtreeOpenNodeScope(jjtn002);
                                 }
                                 try {
/*@egen*/"abstract"/*@bgen(jjtree)*/
                                 } finally {
                                   if (jjtc002) {
                                     jjtree.closeNodeScope(jjtn002, true);
                                     jjtreeCloseNodeScope(jjtn002);
                                   }
                                 }
/*@egen*/         ])
  ResultType() MethodDeclarator() [ "throws" ThrowsNameList()  ]
  (/*@bgen(jjtree) MedthodDeclBody */
        {
          YoyooMedthodDeclBody jjtn003 = new YoyooMedthodDeclBody(JJTMEDTHODDECLBODY);
          boolean jjtc003 = true;
          jjtree.openNodeScope(jjtn003);
          jjtreeOpenNodeScope(jjtn003);
        }
        try {
/*@egen*/	Block()/*@bgen(jjtree)*/
        } catch (Throwable jjte003) {
          if (jjtc003) {
            jjtree.clearNodeScope(jjtn003);
            jjtc003 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte003 instanceof RuntimeException) {
            throw (RuntimeException)jjte003;
          }
          if (jjte003 instanceof ParseException) {
            throw (ParseException)jjte003;
          }
          throw (Error)jjte003;
        } finally {
          if (jjtc003) {
            jjtree.closeNodeScope(jjtn003, true);
            jjtreeCloseNodeScope(jjtn003);
          }
        }
/*@egen*/                /*@bgen(jjtree)*/
          {
            jjtree.closeNodeScope(jjtn000, true);
            jjtc000 = false;
            jjtreeCloseNodeScope(jjtn000);
          }
/*@egen*/
	  {
	      if (isInterface)
	         throw new ParseException("The method cannot have method body");
	  }
   | ";"/*@bgen(jjtree)*/
          {
            jjtree.closeNodeScope(jjtn000, true);
            jjtc000 = false;
            jjtreeCloseNodeScope(jjtn000);
          }
/*@egen*/ 
   	  {
	      if (!isInterface && !isAbstract)
	         throw new ParseException("The method must have method body");
	  }
  )/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/ 
}

void MethodDeclarator()      :
{}
{/*@bgen(jjtree) MethodName */
  {
    YoyooMethodName jjtn001 = new YoyooMethodName(JJTMETHODNAME);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  <IDENTIFIER>/*@bgen(jjtree)*/
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/            
  FormalParameters() ( "[" "]" )*
  
}


void FieldDeclaration()           :
{/*@bgen(jjtree) FieldDecl */
  YoyooFieldDecl jjtn000 = new YoyooFieldDecl(JJTFIELDDECL);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) FieldDecl */
  try {
/*@egen*/
  Modifier() [/*@bgen(jjtree) Static */
              {
                YoyooStatic jjtn001 = new YoyooStatic(JJTSTATIC);
                boolean jjtc001 = true;
                jjtree.openNodeScope(jjtn001);
                jjtreeOpenNodeScope(jjtn001);
              }
              try {
/*@egen*/"static"/*@bgen(jjtree)*/
              } finally {
                if (jjtc001) {
                  jjtree.closeNodeScope(jjtn001, true);
                  jjtreeCloseNodeScope(jjtn001);
                }
              }
/*@egen*/       ] [/*@bgen(jjtree) Final */
                                {
                                  YoyooFinal jjtn002 = new YoyooFinal(JJTFINAL);
                                  boolean jjtc002 = true;
                                  jjtree.openNodeScope(jjtn002);
                                  jjtreeOpenNodeScope(jjtn002);
                                }
                                try {
/*@egen*/"final"/*@bgen(jjtree)*/
                                } finally {
                                  if (jjtc002) {
                                    jjtree.closeNodeScope(jjtn002, true);
                                    jjtreeCloseNodeScope(jjtn002);
                                  }
                                }
/*@egen*/      ]
  (Type()|Ref()|SpecialExprType()) VariableDeclarator() ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}



void VariableDeclarator()       :
{}
{
  VariableDeclaratorId() [ "=" VariableInitializer() ]
}

void VariableDeclaratorId()  :
{/*@bgen(jjtree) VariableDeclaratorId */
  YoyooVariableDeclaratorId jjtn000 = new YoyooVariableDeclaratorId(JJTVARIABLEDECLARATORID);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) VariableDeclaratorId */
        try {
/*@egen*/
 	<IDENTIFIER> ( "[" "]" )*/*@bgen(jjtree)*/
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
            jjtreeCloseNodeScope(jjtn000);
          }
        }
/*@egen*/
}

void VariableInitializer()  :
{/*@bgen(jjtree) VariableInitializer */
  YoyooVariableInitializer jjtn000 = new YoyooVariableInitializer(JJTVARIABLEINITIALIZER);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) VariableInitializer */
        try {
/*@egen*/
  	ArrayInitializer() 
|	
	Expression()/*@bgen(jjtree)*/
        } catch (Throwable jjte000) {
          if (jjtc000) {
            jjtree.clearNodeScope(jjtn000);
            jjtc000 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte000 instanceof RuntimeException) {
            throw (RuntimeException)jjte000;
          }
          if (jjte000 instanceof ParseException) {
            throw (ParseException)jjte000;
          }
          throw (Error)jjte000;
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
            jjtreeCloseNodeScope(jjtn000);
          }
        }
/*@egen*/ 
}

void ArrayInitializer()            :
{/*@bgen(jjtree) ArrayInit */
  YoyooArrayInit jjtn000 = new YoyooArrayInit(JJTARRAYINIT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ArrayInit */
  try {
/*@egen*/
  "{" [ VariableInitializer() ( LOOKAHEAD(2) "," VariableInitializer() )* ] [ "," ] "}"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}



void FormalParameters() :
{/*@bgen(jjtree) FormalParameters */
  YoyooFormalParameters jjtn000 = new YoyooFormalParameters(JJTFORMALPARAMETERS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) FormalParameters */
  try {
/*@egen*/
  "(" [ FormalParameter() ( "," FormalParameter() )* ] ")"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void FormalParameter()  :
{/*@bgen(jjtree) FormalParameter */
  YoyooFormalParameter jjtn000 = new YoyooFormalParameter(JJTFORMALPARAMETER);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) FormalParameter */
  try {
/*@egen*//*@bgen(jjtree) FormalParameterType */
  {
    YoyooFormalParameterType jjtn001 = new YoyooFormalParameterType(JJTFORMALPARAMETERTYPE);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  Type()/*@bgen(jjtree)*/
  } catch (Throwable jjte001) {
    if (jjtc001) {
      jjtree.clearNodeScope(jjtn001);
      jjtc001 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte001 instanceof RuntimeException) {
      throw (RuntimeException)jjte001;
    }
    if (jjte001 instanceof ParseException) {
      throw (ParseException)jjte001;
    }
    throw (Error)jjte001;
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/                    /*@bgen(jjtree) FormalParameterName */
  {
    YoyooFormalParameterName jjtn002 = new YoyooFormalParameterName(JJTFORMALPARAMETERNAME);
    boolean jjtc002 = true;
    jjtree.openNodeScope(jjtn002);
    jjtreeOpenNodeScope(jjtn002);
  }
  try {
/*@egen*/
  VariableDeclaratorId()/*@bgen(jjtree)*/
  } catch (Throwable jjte002) {
    if (jjtc002) {
      jjtree.clearNodeScope(jjtn002);
      jjtc002 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte002 instanceof RuntimeException) {
      throw (RuntimeException)jjte002;
    }
    if (jjte002 instanceof ParseException) {
      throw (ParseException)jjte002;
    }
    throw (Error)jjte002;
  } finally {
    if (jjtc002) {
      jjtree.closeNodeScope(jjtn002, true);
      jjtreeCloseNodeScope(jjtn002);
    }
  }
/*@egen*/                     /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}
/*
void ConstructorDeclaration() #void :
{}
{
  [ "public" | "protected" | "private" ]
  <IDENTIFIER> FormalParameters() [ "throws" NameList() ]
  "{"
    [ LOOKAHEAD(ExplicitConstructorInvocation()) ExplicitConstructorInvocation() ]
    ( BlockStatement() )*
  "}"
}

void ExplicitConstructorInvocation() #void :
{}
{
  LOOKAHEAD("this" Arguments() ";")
  "this" Arguments() ";"
|
  [ LOOKAHEAD(2) PrimaryExpression() "." ] "super" Arguments() ";"
}

void Initializer() #void :
{}
{
  Block()
}
*/

/*
 * Type, name and expression syntax follows.
 */
/*
void Type() #void :
{}
{
	
	( 
		(PrimitiveType()#PrimitiveTypeName) 
		(( LOOKAHEAD(2)("[" "]")#ArrayDecl )*) 
	)  #PrimitiveType
	|
	( 
		(Name()#ReferenceTypeName) 
		(( LOOKAHEAD(2)("[" "]")#ArrayDecl )*)  
	) #ReferenceNameType
	
	 
	
}
*/
void Type()      :
{}
{
   LOOKAHEAD(2) ReferenceType()
 |/*@bgen(jjtree) PrimitiveType */
   {
     YoyooPrimitiveType jjtn001 = new YoyooPrimitiveType(JJTPRIMITIVETYPE);
     boolean jjtc001 = true;
     jjtree.openNodeScope(jjtn001);
     jjtreeOpenNodeScope(jjtn001);
   }
   try {
/*@egen*/
   PrimitiveType()/*@bgen(jjtree)*/
   } catch (Throwable jjte001) {
     if (jjtc001) {
       jjtree.clearNodeScope(jjtn001);
       jjtc001 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte001 instanceof RuntimeException) {
       throw (RuntimeException)jjte001;
     }
     if (jjte001 instanceof ParseException) {
       throw (ParseException)jjte001;
     }
     throw (Error)jjte001;
   } finally {
     if (jjtc001) {
       jjtree.closeNodeScope(jjtn001, true);
       jjtreeCloseNodeScope(jjtn001);
     }
   }
/*@egen*/               
}

void PrimitiveType()                    :
{/*@bgen(jjtree) PrimitiveTypeName */
  YoyooPrimitiveTypeName jjtn000 = new YoyooPrimitiveTypeName(JJTPRIMITIVETYPENAME);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) PrimitiveTypeName */
 try {
/*@egen*/
 "boolean"
|
  "string"
|
  "short"
|
  "int"
|
  "float"
|
  "long"
|
  "double"
|
  "char"/*@bgen(jjtree)*/
 } finally {
   if (jjtc000) {
     jjtree.closeNodeScope(jjtn000, true);
     jjtreeCloseNodeScope(jjtn000);
   }
 }
/*@egen*/
 
}

void ReferenceType()       :
{}
{/*@bgen(jjtree) PrimitiveType */
   {
     YoyooPrimitiveType jjtn002 = new YoyooPrimitiveType(JJTPRIMITIVETYPE);
     boolean jjtc002 = true;
     jjtree.openNodeScope(jjtn002);
     jjtreeOpenNodeScope(jjtn002);
   }
   try {
/*@egen*/
   ((PrimitiveType()) ( LOOKAHEAD(2) (/*@bgen(jjtree) ArrayDecl */
                                      {
                                        YoyooArrayDecl jjtn001 = new YoyooArrayDecl(JJTARRAYDECL);
                                        boolean jjtc001 = true;
                                        jjtree.openNodeScope(jjtn001);
                                        jjtreeOpenNodeScope(jjtn001);
                                      }
                                      try {
/*@egen*/("[" "]")/*@bgen(jjtree)*/
                                      } finally {
                                        if (jjtc001) {
                                          jjtree.closeNodeScope(jjtn001, true);
                                          jjtreeCloseNodeScope(jjtn001);
                                        }
                                      }
/*@egen*/          ) )+)/*@bgen(jjtree)*/
   } catch (Throwable jjte002) {
     if (jjtc002) {
       jjtree.clearNodeScope(jjtn002);
       jjtc002 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte002 instanceof RuntimeException) {
       throw (RuntimeException)jjte002;
     }
     if (jjte002 instanceof ParseException) {
       throw (ParseException)jjte002;
     }
     throw (Error)jjte002;
   } finally {
     if (jjtc002) {
       jjtree.closeNodeScope(jjtn002, true);
       jjtreeCloseNodeScope(jjtn002);
     }
   }
/*@egen*/              
  |/*@bgen(jjtree) ReferenceType */
   {
     YoyooReferenceType jjtn004 = new YoyooReferenceType(JJTREFERENCETYPE);
     boolean jjtc004 = true;
     jjtree.openNodeScope(jjtn004);
     jjtreeOpenNodeScope(jjtn004);
   }
   try {
/*@egen*/
   (( ClassOrInterfaceType() ) ( LOOKAHEAD(2)/*@bgen(jjtree) ArrayDecl */
                                              {
                                                YoyooArrayDecl jjtn003 = new YoyooArrayDecl(JJTARRAYDECL);
                                                boolean jjtc003 = true;
                                                jjtree.openNodeScope(jjtn003);
                                                jjtreeOpenNodeScope(jjtn003);
                                              }
                                              try {
/*@egen*/ ("[" "]")/*@bgen(jjtree)*/
                                              } finally {
                                                if (jjtc003) {
                                                  jjtree.closeNodeScope(jjtn003, true);
                                                  jjtreeCloseNodeScope(jjtn003);
                                                }
                                              }
/*@egen*/           )*)/*@bgen(jjtree)*/
   } catch (Throwable jjte004) {
     if (jjtc004) {
       jjtree.clearNodeScope(jjtn004);
       jjtc004 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte004 instanceof RuntimeException) {
       throw (RuntimeException)jjte004;
     }
     if (jjte004 instanceof ParseException) {
       throw (ParseException)jjte004;
     }
     throw (Error)jjte004;
   } finally {
     if (jjtc004) {
       jjtree.closeNodeScope(jjtn004, true);
       jjtreeCloseNodeScope(jjtn004);
     }
   }
/*@egen*/              
}

void ClassOrInterfaceType()     :
{}
{/*@bgen(jjtree) ClassOrInterfaceName */
  {
    YoyooClassOrInterfaceName jjtn001 = new YoyooClassOrInterfaceName(JJTCLASSORINTERFACENAME);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  <IDENTIFIER>/*@bgen(jjtree)*/
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/                      [ LOOKAHEAD(2)/*@bgen(jjtree) ClassOrInterfaceTypeArguments */
                                                   {
                                                     YoyooClassOrInterfaceTypeArguments jjtn002 = new YoyooClassOrInterfaceTypeArguments(JJTCLASSORINTERFACETYPEARGUMENTS);
                                                     boolean jjtc002 = true;
                                                     jjtree.openNodeScope(jjtn002);
                                                     jjtreeOpenNodeScope(jjtn002);
                                                   }
                                                   try {
/*@egen*/ TypeArguments()/*@bgen(jjtree)*/
                                                   } catch (Throwable jjte002) {
                                                     if (jjtc002) {
                                                       jjtree.clearNodeScope(jjtn002);
                                                       jjtc002 = false;
                                                     } else {
                                                       jjtree.popNode();
                                                     }
                                                     if (jjte002 instanceof RuntimeException) {
                                                       throw (RuntimeException)jjte002;
                                                     }
                                                     if (jjte002 instanceof ParseException) {
                                                       throw (ParseException)jjte002;
                                                     }
                                                     throw (Error)jjte002;
                                                   } finally {
                                                     if (jjtc002) {
                                                       jjtree.closeNodeScope(jjtn002, true);
                                                       jjtreeCloseNodeScope(jjtn002);
                                                     }
                                                   }
/*@egen*/                                ]
  ( LOOKAHEAD(2) "."/*@bgen(jjtree) ClassOrInterfaceName */
                     {
                       YoyooClassOrInterfaceName jjtn003 = new YoyooClassOrInterfaceName(JJTCLASSORINTERFACENAME);
                       boolean jjtc003 = true;
                       jjtree.openNodeScope(jjtn003);
                       jjtreeOpenNodeScope(jjtn003);
                     }
                     try {
/*@egen*/ <IDENTIFIER>/*@bgen(jjtree)*/
                     } finally {
                       if (jjtc003) {
                         jjtree.closeNodeScope(jjtn003, true);
                         jjtreeCloseNodeScope(jjtn003);
                       }
                     }
/*@egen*/                      [ LOOKAHEAD(2)/*@bgen(jjtree) ClassOrInterfaceTypeArguments */
                                                                      {
                                                                        YoyooClassOrInterfaceTypeArguments jjtn004 = new YoyooClassOrInterfaceTypeArguments(JJTCLASSORINTERFACETYPEARGUMENTS);
                                                                        boolean jjtc004 = true;
                                                                        jjtree.openNodeScope(jjtn004);
                                                                        jjtreeOpenNodeScope(jjtn004);
                                                                      }
                                                                      try {
/*@egen*/ TypeArguments()/*@bgen(jjtree)*/
                                                                      } catch (Throwable jjte004) {
                                                                        if (jjtc004) {
                                                                          jjtree.clearNodeScope(jjtn004);
                                                                          jjtc004 = false;
                                                                        } else {
                                                                          jjtree.popNode();
                                                                        }
                                                                        if (jjte004 instanceof RuntimeException) {
                                                                          throw (RuntimeException)jjte004;
                                                                        }
                                                                        if (jjte004 instanceof ParseException) {
                                                                          throw (ParseException)jjte004;
                                                                        }
                                                                        throw (Error)jjte004;
                                                                      } finally {
                                                                        if (jjtc004) {
                                                                          jjtree.closeNodeScope(jjtn004, true);
                                                                          jjtreeCloseNodeScope(jjtn004);
                                                                        }
                                                                      }
/*@egen*/                               ]  )*
}

void ResultType() :
{/*@bgen(jjtree) ResultType */
  YoyooResultType jjtn000 = new YoyooResultType(JJTRESULTTYPE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ResultType */
  try {
/*@egen*//*@bgen(jjtree) VoidType */
  {
    YoyooVoidType jjtn001 = new YoyooVoidType(JJTVOIDTYPE);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  "void"/*@bgen(jjtree)*/
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/           
|
  Type()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}



void TypeArguments()       :
{}
{
   "<" TypeArgument() ( "," TypeArgument() )* ">"
}

void TypeArgument():
{/*@bgen(jjtree) TypeArgument */
  YoyooTypeArgument jjtn000 = new YoyooTypeArgument(JJTTYPEARGUMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) TypeArgument */
   try {
/*@egen*/
   LOOKAHEAD(2)/*@bgen(jjtree) TypeArgumentType */
                {
                  YoyooTypeArgumentType jjtn002 = new YoyooTypeArgumentType(JJTTYPEARGUMENTTYPE);
                  boolean jjtc002 = true;
                  jjtree.openNodeScope(jjtn002);
                  jjtreeOpenNodeScope(jjtn002);
                }
                try {
/*@egen*/ (/*@bgen(jjtree) PrimitiveType */
                 {
                   YoyooPrimitiveType jjtn001 = new YoyooPrimitiveType(JJTPRIMITIVETYPE);
                   boolean jjtc001 = true;
                   jjtree.openNodeScope(jjtn001);
                   jjtreeOpenNodeScope(jjtn001);
                 }
                 try {
/*@egen*/PrimitiveType()/*@bgen(jjtree)*/
                 } catch (Throwable jjte001) {
                   if (jjtc001) {
                     jjtree.clearNodeScope(jjtn001);
                     jjtc001 = false;
                   } else {
                     jjtree.popNode();
                   }
                   if (jjte001 instanceof RuntimeException) {
                     throw (RuntimeException)jjte001;
                   }
                   if (jjte001 instanceof ParseException) {
                     throw (ParseException)jjte001;
                   }
                   throw (Error)jjte001;
                 } finally {
                   if (jjtc001) {
                     jjtree.closeNodeScope(jjtn001, true);
                     jjtreeCloseNodeScope(jjtn001);
                   }
                 }
/*@egen*/              )/*@bgen(jjtree)*/
                } catch (Throwable jjte002) {
                  if (jjtc002) {
                    jjtree.clearNodeScope(jjtn002);
                    jjtc002 = false;
                  } else {
                    jjtree.popNode();
                  }
                  if (jjte002 instanceof RuntimeException) {
                    throw (RuntimeException)jjte002;
                  }
                  if (jjte002 instanceof ParseException) {
                    throw (ParseException)jjte002;
                  }
                  throw (Error)jjte002;
                } finally {
                  if (jjtc002) {
                    jjtree.closeNodeScope(jjtn002, true);
                    jjtreeCloseNodeScope(jjtn002);
                  }
                }
/*@egen*/                 
 |  
   LOOKAHEAD(2)/*@bgen(jjtree) TypeArgumentType */
                {
                  YoyooTypeArgumentType jjtn003 = new YoyooTypeArgumentType(JJTTYPEARGUMENTTYPE);
                  boolean jjtc003 = true;
                  jjtree.openNodeScope(jjtn003);
                  jjtreeOpenNodeScope(jjtn003);
                }
                try {
/*@egen*/ ReferenceType()/*@bgen(jjtree)*/
                } catch (Throwable jjte003) {
                  if (jjtc003) {
                    jjtree.clearNodeScope(jjtn003);
                    jjtc003 = false;
                  } else {
                    jjtree.popNode();
                  }
                  if (jjte003 instanceof RuntimeException) {
                    throw (RuntimeException)jjte003;
                  }
                  if (jjte003 instanceof ParseException) {
                    throw (ParseException)jjte003;
                  }
                  throw (Error)jjte003;
                } finally {
                  if (jjtc003) {
                    jjtree.closeNodeScope(jjtn003, true);
                    jjtreeCloseNodeScope(jjtn003);
                  }
                }
/*@egen*/                 
 |
   "?" [ WildcardBounds() ]/*@bgen(jjtree)*/
   } catch (Throwable jjte000) {
     if (jjtc000) {
       jjtree.clearNodeScope(jjtn000);
       jjtc000 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte000 instanceof RuntimeException) {
       throw (RuntimeException)jjte000;
     }
     if (jjte000 instanceof ParseException) {
       throw (ParseException)jjte000;
     }
     throw (Error)jjte000;
   } finally {
     if (jjtc000) {
       jjtree.closeNodeScope(jjtn000, true);
       jjtreeCloseNodeScope(jjtn000);
     }
   }
/*@egen*/ 
}

void WildcardBounds():
{/*@bgen(jjtree) WildcardBounds */
  YoyooWildcardBounds jjtn000 = new YoyooWildcardBounds(JJTWILDCARDBOUNDS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) WildcardBounds */
   try {
/*@egen*//*@bgen(jjtree) WildcardBoundsExtends */
   {
     YoyooWildcardBoundsExtends jjtn001 = new YoyooWildcardBoundsExtends(JJTWILDCARDBOUNDSEXTENDS);
     boolean jjtc001 = true;
     jjtree.openNodeScope(jjtn001);
     jjtreeOpenNodeScope(jjtn001);
   }
   try {
/*@egen*/
   "extends"/*@bgen(jjtree)*/
   } finally {
     if (jjtc001) {
       jjtree.closeNodeScope(jjtn001, true);
       jjtreeCloseNodeScope(jjtn001);
     }
   }
/*@egen*/                      /*@bgen(jjtree) WildcardBoundsType */
                                   {
                                     YoyooWildcardBoundsType jjtn002 = new YoyooWildcardBoundsType(JJTWILDCARDBOUNDSTYPE);
                                     boolean jjtc002 = true;
                                     jjtree.openNodeScope(jjtn002);
                                     jjtreeOpenNodeScope(jjtn002);
                                   }
                                   try {
/*@egen*/ ReferenceType()/*@bgen(jjtree)*/
                                   } catch (Throwable jjte002) {
                                     if (jjtc002) {
                                       jjtree.clearNodeScope(jjtn002);
                                       jjtc002 = false;
                                     } else {
                                       jjtree.popNode();
                                     }
                                     if (jjte002 instanceof RuntimeException) {
                                       throw (RuntimeException)jjte002;
                                     }
                                     if (jjte002 instanceof ParseException) {
                                       throw (ParseException)jjte002;
                                     }
                                     throw (Error)jjte002;
                                   } finally {
                                     if (jjtc002) {
                                       jjtree.closeNodeScope(jjtn002, true);
                                       jjtreeCloseNodeScope(jjtn002);
                                     }
                                   }
/*@egen*/                   
 |/*@bgen(jjtree) WildcardBoundsSuper */
   {
     YoyooWildcardBoundsSuper jjtn003 = new YoyooWildcardBoundsSuper(JJTWILDCARDBOUNDSSUPER);
     boolean jjtc003 = true;
     jjtree.openNodeScope(jjtn003);
     jjtreeOpenNodeScope(jjtn003);
   }
   try {
/*@egen*/
   "super"/*@bgen(jjtree)*/
   } finally {
     if (jjtc003) {
       jjtree.closeNodeScope(jjtn003, true);
       jjtreeCloseNodeScope(jjtn003);
     }
   }
/*@egen*/                    /*@bgen(jjtree) WildcardBoundsType */
                               {
                                 YoyooWildcardBoundsType jjtn004 = new YoyooWildcardBoundsType(JJTWILDCARDBOUNDSTYPE);
                                 boolean jjtc004 = true;
                                 jjtree.openNodeScope(jjtn004);
                                 jjtreeOpenNodeScope(jjtn004);
                               }
                               try {
/*@egen*/ ReferenceType()/*@bgen(jjtree)*/
                               } catch (Throwable jjte004) {
                                 if (jjtc004) {
                                   jjtree.clearNodeScope(jjtn004);
                                   jjtc004 = false;
                                 } else {
                                   jjtree.popNode();
                                 }
                                 if (jjte004 instanceof RuntimeException) {
                                   throw (RuntimeException)jjte004;
                                 }
                                 if (jjte004 instanceof ParseException) {
                                   throw (ParseException)jjte004;
                                 }
                                 throw (Error)jjte004;
                               } finally {
                                 if (jjtc004) {
                                   jjtree.closeNodeScope(jjtn004, true);
                                   jjtreeCloseNodeScope(jjtn004);
                                 }
                               }
/*@egen*/                   /*@bgen(jjtree)*/
   } catch (Throwable jjte000) {
     if (jjtc000) {
       jjtree.clearNodeScope(jjtn000);
       jjtc000 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte000 instanceof RuntimeException) {
       throw (RuntimeException)jjte000;
     }
     if (jjte000 instanceof ParseException) {
       throw (ParseException)jjte000;
     }
     throw (Error)jjte000;
   } finally {
     if (jjtc000) {
       jjtree.closeNodeScope(jjtn000, true);
       jjtreeCloseNodeScope(jjtn000);
     }
   }
/*@egen*/
}

void TypeParameters()  :
{/*@bgen(jjtree) TypeParameters */
  YoyooTypeParameters jjtn000 = new YoyooTypeParameters(JJTTYPEPARAMETERS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) TypeParameters */
   try {
/*@egen*/
   "<" TypeParameter() ( "," TypeParameter() )* ">"/*@bgen(jjtree)*/
   } catch (Throwable jjte000) {
     if (jjtc000) {
       jjtree.clearNodeScope(jjtn000);
       jjtc000 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte000 instanceof RuntimeException) {
       throw (RuntimeException)jjte000;
     }
     if (jjte000 instanceof ParseException) {
       throw (ParseException)jjte000;
     }
     throw (Error)jjte000;
   } finally {
     if (jjtc000) {
       jjtree.closeNodeScope(jjtn000, true);
       jjtreeCloseNodeScope(jjtn000);
     }
   }
/*@egen*/
}

void TypeParameter() :
{/*@bgen(jjtree) TypeParameter */
  YoyooTypeParameter jjtn000 = new YoyooTypeParameter(JJTTYPEPARAMETER);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) TypeParameter */
   try {
/*@egen*//*@bgen(jjtree) TypeParameterName */
   {
     YoyooTypeParameterName jjtn001 = new YoyooTypeParameterName(JJTTYPEPARAMETERNAME);
     boolean jjtc001 = true;
     jjtree.openNodeScope(jjtn001);
     jjtreeOpenNodeScope(jjtn001);
   }
   try {
/*@egen*/
   <IDENTIFIER>/*@bgen(jjtree)*/
   } finally {
     if (jjtc001) {
       jjtree.closeNodeScope(jjtn001, true);
       jjtreeCloseNodeScope(jjtn001);
     }
   }
/*@egen*/                   [ TypeBound() ]/*@bgen(jjtree)*/
   } catch (Throwable jjte000) {
     if (jjtc000) {
       jjtree.clearNodeScope(jjtn000);
       jjtc000 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte000 instanceof RuntimeException) {
       throw (RuntimeException)jjte000;
     }
     if (jjte000 instanceof ParseException) {
       throw (ParseException)jjte000;
     }
     throw (Error)jjte000;
   } finally {
     if (jjtc000) {
       jjtree.closeNodeScope(jjtn000, true);
       jjtreeCloseNodeScope(jjtn000);
     }
   }
/*@egen*/
}

void TypeBound()     :
{}
{
   "extends" (/*@bgen(jjtree) TypeBoundName */
              {
                YoyooTypeBoundName jjtn001 = new YoyooTypeBoundName(JJTTYPEBOUNDNAME);
                boolean jjtc001 = true;
                jjtree.openNodeScope(jjtn001);
                jjtreeOpenNodeScope(jjtn001);
              }
              try {
/*@egen*/ClassOrInterfaceType()/*@bgen(jjtree)*/
              } catch (Throwable jjte001) {
                if (jjtc001) {
                  jjtree.clearNodeScope(jjtn001);
                  jjtc001 = false;
                } else {
                  jjtree.popNode();
                }
                if (jjte001 instanceof RuntimeException) {
                  throw (RuntimeException)jjte001;
                }
                if (jjte001 instanceof ParseException) {
                  throw (ParseException)jjte001;
                }
                throw (Error)jjte001;
              } finally {
                if (jjtc001) {
                  jjtree.closeNodeScope(jjtn001, true);
                  jjtreeCloseNodeScope(jjtn001);
                }
              }
/*@egen*/              ) ( "&" (/*@bgen(jjtree) TypeBoundName */
                                                           {
                                                             YoyooTypeBoundName jjtn002 = new YoyooTypeBoundName(JJTTYPEBOUNDNAME);
                                                             boolean jjtc002 = true;
                                                             jjtree.openNodeScope(jjtn002);
                                                             jjtreeOpenNodeScope(jjtn002);
                                                           }
                                                           try {
/*@egen*/ClassOrInterfaceType()/*@bgen(jjtree)*/
                                                           } catch (Throwable jjte002) {
                                                             if (jjtc002) {
                                                               jjtree.clearNodeScope(jjtn002);
                                                               jjtc002 = false;
                                                             } else {
                                                               jjtree.popNode();
                                                             }
                                                             if (jjte002 instanceof RuntimeException) {
                                                               throw (RuntimeException)jjte002;
                                                             }
                                                             if (jjte002 instanceof ParseException) {
                                                               throw (ParseException)jjte002;
                                                             }
                                                             throw (Error)jjte002;
                                                           } finally {
                                                             if (jjtc002) {
                                                               jjtree.closeNodeScope(jjtn002, true);
                                                               jjtreeCloseNodeScope(jjtn002);
                                                             }
                                                           }
/*@egen*/              ) )*
}


String Name()       :
{
	Token t;
	StringBuffer sb = new StringBuffer();
}
{
  t = <IDENTIFIER> {sb.append(t.image);}
  ( LOOKAHEAD(2) "." t = <IDENTIFIER> {sb.append("."); sb.append(t.image);}
  )* 
  {
  	return sb.toString();
  }
}

void ThrowsNameList() :
{/*@bgen(jjtree) ThrowsNameList */
  YoyooThrowsNameList jjtn000 = new YoyooThrowsNameList(JJTTHROWSNAMELIST);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ThrowsNameList */
  try {
/*@egen*/
  (/*@bgen(jjtree) ThrowName */
   {
     YoyooThrowName jjtn001 = new YoyooThrowName(JJTTHROWNAME);
     boolean jjtc001 = true;
     jjtree.openNodeScope(jjtn001);
     jjtreeOpenNodeScope(jjtn001);
   }
   try {
/*@egen*/Name()/*@bgen(jjtree)*/
   } catch (Throwable jjte001) {
     if (jjtc001) {
       jjtree.clearNodeScope(jjtn001);
       jjtc001 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte001 instanceof RuntimeException) {
       throw (RuntimeException)jjte001;
     }
     if (jjte001 instanceof ParseException) {
       throw (ParseException)jjte001;
     }
     throw (Error)jjte001;
   } finally {
     if (jjtc001) {
       jjtree.closeNodeScope(jjtn001, true);
       jjtreeCloseNodeScope(jjtn001);
     }
   }
/*@egen*/          )
  ( "," (/*@bgen(jjtree) ThrowName */
         {
           YoyooThrowName jjtn002 = new YoyooThrowName(JJTTHROWNAME);
           boolean jjtc002 = true;
           jjtree.openNodeScope(jjtn002);
           jjtreeOpenNodeScope(jjtn002);
         }
         try {
/*@egen*/Name()/*@bgen(jjtree)*/
         } catch (Throwable jjte002) {
           if (jjtc002) {
             jjtree.clearNodeScope(jjtn002);
             jjtc002 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte002 instanceof RuntimeException) {
             throw (RuntimeException)jjte002;
           }
           if (jjte002 instanceof ParseException) {
             throw (ParseException)jjte002;
           }
           throw (Error)jjte002;
         } finally {
           if (jjtc002) {
             jjtree.closeNodeScope(jjtn002, true);
             jjtreeCloseNodeScope(jjtn002);
           }
         }
/*@egen*/          )
  )*/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}




/*
 * Expression syntax follows.
 */

void Expression()       :
/*
 * This expansion has been written this way instead of:
 *   Assignment() | ConditionalExpression()
 * for performance reasons.
 * However, it is a weakening of the grammar for it allows the LHS of
 * assignments to be any conditional expression whereas it can only be
 * a primary expression.  Consider adding a semantic predicate to work
 * around this.
 */
{}
{
  ConditionalExpression() 
  [ 
    AssignmentOperator()/*@bgen(jjtree) #AssignExpr( 3) */
                         {
                           YoyooAssignExpr jjtn002 = new YoyooAssignExpr(JJTASSIGNEXPR);
                           boolean jjtc002 = true;
                           jjtree.openNodeScope(jjtn002);
                           jjtreeOpenNodeScope(jjtn002);
                         }
                         try {
/*@egen*/ (/*@bgen(jjtree) AssignVal */
                          {
                            YoyooAssignVal jjtn001 = new YoyooAssignVal(JJTASSIGNVAL);
                            boolean jjtc001 = true;
                            jjtree.openNodeScope(jjtn001);
                            jjtreeOpenNodeScope(jjtn001);
                          }
                          try {
/*@egen*/Expression()/*@bgen(jjtree)*/
                          } catch (Throwable jjte001) {
                            if (jjtc001) {
                              jjtree.clearNodeScope(jjtn001);
                              jjtc001 = false;
                            } else {
                              jjtree.popNode();
                            }
                            if (jjte001 instanceof RuntimeException) {
                              throw (RuntimeException)jjte001;
                            }
                            if (jjte001 instanceof ParseException) {
                              throw (ParseException)jjte001;
                            }
                            throw (Error)jjte001;
                          } finally {
                            if (jjtc001) {
                              jjtree.closeNodeScope(jjtn001, true);
                              jjtreeCloseNodeScope(jjtn001);
                            }
                          }
/*@egen*/           )/*@bgen(jjtree)*/
                         } catch (Throwable jjte002) {
                           if (jjtc002) {
                             jjtree.clearNodeScope(jjtn002);
                             jjtc002 = false;
                           } else {
                             jjtree.popNode();
                           }
                           if (jjte002 instanceof RuntimeException) {
                             throw (RuntimeException)jjte002;
                           }
                           if (jjte002 instanceof ParseException) {
                             throw (ParseException)jjte002;
                           }
                           throw (Error)jjte002;
                         } finally {
                           if (jjtc002) {
                             jjtree.closeNodeScope(jjtn002,  3);
                             jjtreeCloseNodeScope(jjtn002);
                           }
                         }
/*@egen*/               
  ]

}

void AssignmentOperator() :
{/*@bgen(jjtree) AssignmentOperator */
  YoyooAssignmentOperator jjtn000 = new YoyooAssignmentOperator(JJTASSIGNMENTOPERATOR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) AssignmentOperator */
  try {
/*@egen*/
  ( "=" | "*=" | "/=" | "%=" | "+=" | "-=" )/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void ConditionalExpression()       :
{}
{
  ConditionalOrExpression()  
  [ 
  "?"/*@bgen(jjtree) CondTrueExpr */
      {
        YoyooCondTrueExpr jjtn001 = new YoyooCondTrueExpr(JJTCONDTRUEEXPR);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
        jjtreeOpenNodeScope(jjtn001);
      }
      try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001, true);
          jjtreeCloseNodeScope(jjtn001);
        }
      }
/*@egen*/               ":"/*@bgen(jjtree) #CondExpr( 3) */
                                     {
                                       YoyooCondExpr jjtn003 = new YoyooCondExpr(JJTCONDEXPR);
                                       boolean jjtc003 = true;
                                       jjtree.openNodeScope(jjtn003);
                                       jjtreeOpenNodeScope(jjtn003);
                                     }
                                     try {
/*@egen*/ (/*@bgen(jjtree) CondFalseExpr */
                                      {
                                        YoyooCondFalseExpr jjtn002 = new YoyooCondFalseExpr(JJTCONDFALSEEXPR);
                                        boolean jjtc002 = true;
                                        jjtree.openNodeScope(jjtn002);
                                        jjtreeOpenNodeScope(jjtn002);
                                      }
                                      try {
/*@egen*/ConditionalExpression()/*@bgen(jjtree)*/
                                      } catch (Throwable jjte002) {
                                        if (jjtc002) {
                                          jjtree.clearNodeScope(jjtn002);
                                          jjtc002 = false;
                                        } else {
                                          jjtree.popNode();
                                        }
                                        if (jjte002 instanceof RuntimeException) {
                                          throw (RuntimeException)jjte002;
                                        }
                                        if (jjte002 instanceof ParseException) {
                                          throw (ParseException)jjte002;
                                        }
                                        throw (Error)jjte002;
                                      } finally {
                                        if (jjtc002) {
                                          jjtree.closeNodeScope(jjtn002, true);
                                          jjtreeCloseNodeScope(jjtn002);
                                        }
                                      }
/*@egen*/               )/*@bgen(jjtree)*/
                                     } catch (Throwable jjte003) {
                                       if (jjtc003) {
                                         jjtree.clearNodeScope(jjtn003);
                                         jjtc003 = false;
                                       } else {
                                         jjtree.popNode();
                                       }
                                       if (jjte003 instanceof RuntimeException) {
                                         throw (RuntimeException)jjte003;
                                       }
                                       if (jjte003 instanceof ParseException) {
                                         throw (ParseException)jjte003;
                                       }
                                       throw (Error)jjte003;
                                     } finally {
                                       if (jjtc003) {
                                         jjtree.closeNodeScope(jjtn003,  3);
                                         jjtreeCloseNodeScope(jjtn003);
                                       }
                                     }
/*@egen*/             
  ]

}

void ConditionalOrExpression()       :
{}
{
  ConditionalAndExpression()  ( (/*@bgen(jjtree) Opt */
                                 {
                                   YoyooOpt jjtn001 = new YoyooOpt(JJTOPT);
                                   boolean jjtc001 = true;
                                   jjtree.openNodeScope(jjtn001);
                                   jjtreeOpenNodeScope(jjtn001);
                                 }
                                 try {
/*@egen*/"||"/*@bgen(jjtree)*/
                                 } finally {
                                   if (jjtc001) {
                                     jjtree.closeNodeScope(jjtn001, true);
                                     jjtreeCloseNodeScope(jjtn001);
                                   }
                                 }
/*@egen*/     )/*@bgen(jjtree) #BionExpr( 3) */
                                            {
                                              YoyooBionExpr jjtn002 = new YoyooBionExpr(JJTBIONEXPR);
                                              boolean jjtc002 = true;
                                              jjtree.openNodeScope(jjtn002);
                                              jjtreeOpenNodeScope(jjtn002);
                                            }
                                            try {
/*@egen*/ ConditionalAndExpression()/*@bgen(jjtree)*/
                                            } catch (Throwable jjte002) {
                                              if (jjtc002) {
                                                jjtree.clearNodeScope(jjtn002);
                                                jjtc002 = false;
                                              } else {
                                                jjtree.popNode();
                                              }
                                              if (jjte002 instanceof RuntimeException) {
                                                throw (RuntimeException)jjte002;
                                              }
                                              if (jjte002 instanceof ParseException) {
                                                throw (ParseException)jjte002;
                                              }
                                              throw (Error)jjte002;
                                            } finally {
                                              if (jjtc002) {
                                                jjtree.closeNodeScope(jjtn002,  3);
                                                jjtreeCloseNodeScope(jjtn002);
                                              }
                                            }
/*@egen*/              )*
}

void ConditionalAndExpression()       :
{}
{
  EqualityExpression()  ( (/*@bgen(jjtree) Opt */
                           {
                             YoyooOpt jjtn001 = new YoyooOpt(JJTOPT);
                             boolean jjtc001 = true;
                             jjtree.openNodeScope(jjtn001);
                             jjtreeOpenNodeScope(jjtn001);
                           }
                           try {
/*@egen*/"&&"/*@bgen(jjtree)*/
                           } finally {
                             if (jjtc001) {
                               jjtree.closeNodeScope(jjtn001, true);
                               jjtreeCloseNodeScope(jjtn001);
                             }
                           }
/*@egen*/    )/*@bgen(jjtree) #BionExpr( 3) */
                                     {
                                       YoyooBionExpr jjtn002 = new YoyooBionExpr(JJTBIONEXPR);
                                       boolean jjtc002 = true;
                                       jjtree.openNodeScope(jjtn002);
                                       jjtreeOpenNodeScope(jjtn002);
                                     }
                                     try {
/*@egen*/ EqualityExpression()/*@bgen(jjtree)*/
                                     } catch (Throwable jjte002) {
                                       if (jjtc002) {
                                         jjtree.clearNodeScope(jjtn002);
                                         jjtc002 = false;
                                       } else {
                                         jjtree.popNode();
                                       }
                                       if (jjte002 instanceof RuntimeException) {
                                         throw (RuntimeException)jjte002;
                                       }
                                       if (jjte002 instanceof ParseException) {
                                         throw (ParseException)jjte002;
                                       }
                                       throw (Error)jjte002;
                                     } finally {
                                       if (jjtc002) {
                                         jjtree.closeNodeScope(jjtn002,  3);
                                         jjtreeCloseNodeScope(jjtn002);
                                       }
                                     }
/*@egen*/              )*
}

void EqualityExpression()       :
{}
{
  InstanceOfExpression() (/*@bgen(jjtree) Opt */
                           {
                             YoyooOpt jjtn001 = new YoyooOpt(JJTOPT);
                             boolean jjtc001 = true;
                             jjtree.openNodeScope(jjtn001);
                             jjtreeOpenNodeScope(jjtn001);
                           }
                           try {
/*@egen*/ ( "==" | "!=" )/*@bgen(jjtree)*/
                           } finally {
                             if (jjtc001) {
                               jjtree.closeNodeScope(jjtn001, true);
                               jjtreeCloseNodeScope(jjtn001);
                             }
                           }
/*@egen*/    /*@bgen(jjtree) #BionExpr( 3) */
                                               {
                                                 YoyooBionExpr jjtn002 = new YoyooBionExpr(JJTBIONEXPR);
                                                 boolean jjtc002 = true;
                                                 jjtree.openNodeScope(jjtn002);
                                                 jjtreeOpenNodeScope(jjtn002);
                                               }
                                               try {
/*@egen*/ InstanceOfExpression()/*@bgen(jjtree)*/
                                               } catch (Throwable jjte002) {
                                                 if (jjtc002) {
                                                   jjtree.clearNodeScope(jjtn002);
                                                   jjtc002 = false;
                                                 } else {
                                                   jjtree.popNode();
                                                 }
                                                 if (jjte002 instanceof RuntimeException) {
                                                   throw (RuntimeException)jjte002;
                                                 }
                                                 if (jjte002 instanceof ParseException) {
                                                   throw (ParseException)jjte002;
                                                 }
                                                 throw (Error)jjte002;
                                               } finally {
                                                 if (jjtc002) {
                                                   jjtree.closeNodeScope(jjtn002,  3);
                                                   jjtreeCloseNodeScope(jjtn002);
                                                 }
                                               }
/*@egen*/              )*
}

void InstanceOfExpression()       :
{}
{
  RelationalExpression() [/*@bgen(jjtree) Opt */
                           {
                             YoyooOpt jjtn001 = new YoyooOpt(JJTOPT);
                             boolean jjtc001 = true;
                             jjtree.openNodeScope(jjtn001);
                             jjtreeOpenNodeScope(jjtn001);
                           }
                           try {
/*@egen*/ "instanceof"/*@bgen(jjtree)*/
                           } finally {
                             if (jjtc001) {
                               jjtree.closeNodeScope(jjtn001, true);
                               jjtreeCloseNodeScope(jjtn001);
                             }
                           }
/*@egen*/    /*@bgen(jjtree) #BionExpr( 3) */
                                            {
                                              YoyooBionExpr jjtn002 = new YoyooBionExpr(JJTBIONEXPR);
                                              boolean jjtc002 = true;
                                              jjtree.openNodeScope(jjtn002);
                                              jjtreeOpenNodeScope(jjtn002);
                                            }
                                            try {
/*@egen*/ Type()/*@bgen(jjtree)*/
                                            } catch (Throwable jjte002) {
                                              if (jjtc002) {
                                                jjtree.clearNodeScope(jjtn002);
                                                jjtc002 = false;
                                              } else {
                                                jjtree.popNode();
                                              }
                                              if (jjte002 instanceof RuntimeException) {
                                                throw (RuntimeException)jjte002;
                                              }
                                              if (jjte002 instanceof ParseException) {
                                                throw (ParseException)jjte002;
                                              }
                                              throw (Error)jjte002;
                                            } finally {
                                              if (jjtc002) {
                                                jjtree.closeNodeScope(jjtn002,  3);
                                                jjtreeCloseNodeScope(jjtn002);
                                              }
                                            }
/*@egen*/              ]
}

void RelationalExpression()       :
{}
{
  AdditiveExpression()  (/*@bgen(jjtree) Opt */
                          {
                            YoyooOpt jjtn001 = new YoyooOpt(JJTOPT);
                            boolean jjtc001 = true;
                            jjtree.openNodeScope(jjtn001);
                            jjtreeOpenNodeScope(jjtn001);
                          }
                          try {
/*@egen*/ ( "<" | ">" | "<=" | ">=" )/*@bgen(jjtree)*/
                          } finally {
                            if (jjtc001) {
                              jjtree.closeNodeScope(jjtn001, true);
                              jjtreeCloseNodeScope(jjtn001);
                            }
                          }
/*@egen*/    /*@bgen(jjtree) #BionExpr( 3) */
                                                            {
                                                              YoyooBionExpr jjtn002 = new YoyooBionExpr(JJTBIONEXPR);
                                                              boolean jjtc002 = true;
                                                              jjtree.openNodeScope(jjtn002);
                                                              jjtreeOpenNodeScope(jjtn002);
                                                            }
                                                            try {
/*@egen*/   AdditiveExpression()/*@bgen(jjtree)*/
                                                            } catch (Throwable jjte002) {
                                                              if (jjtc002) {
                                                                jjtree.clearNodeScope(jjtn002);
                                                                jjtc002 = false;
                                                              } else {
                                                                jjtree.popNode();
                                                              }
                                                              if (jjte002 instanceof RuntimeException) {
                                                                throw (RuntimeException)jjte002;
                                                              }
                                                              if (jjte002 instanceof ParseException) {
                                                                throw (ParseException)jjte002;
                                                              }
                                                              throw (Error)jjte002;
                                                            } finally {
                                                              if (jjtc002) {
                                                                jjtree.closeNodeScope(jjtn002,  3);
                                                                jjtreeCloseNodeScope(jjtn002);
                                                              }
                                                            }
/*@egen*/              )*
}

void AdditiveExpression()       :
{}
{
  MultiplicativeExpression()  (/*@bgen(jjtree) Opt */
                                {
                                  YoyooOpt jjtn001 = new YoyooOpt(JJTOPT);
                                  boolean jjtc001 = true;
                                  jjtree.openNodeScope(jjtn001);
                                  jjtreeOpenNodeScope(jjtn001);
                                }
                                try {
/*@egen*/ ( "+" | "-" )/*@bgen(jjtree)*/
                                } finally {
                                  if (jjtc001) {
                                    jjtree.closeNodeScope(jjtn001, true);
                                    jjtreeCloseNodeScope(jjtn001);
                                  }
                                }
/*@egen*/     /*@bgen(jjtree) #BionExpr( 3) */
                                                    {
                                                      YoyooBionExpr jjtn002 = new YoyooBionExpr(JJTBIONEXPR);
                                                      boolean jjtc002 = true;
                                                      jjtree.openNodeScope(jjtn002);
                                                      jjtreeOpenNodeScope(jjtn002);
                                                    }
                                                    try {
/*@egen*/  MultiplicativeExpression()/*@bgen(jjtree)*/
                                                    } catch (Throwable jjte002) {
                                                      if (jjtc002) {
                                                        jjtree.clearNodeScope(jjtn002);
                                                        jjtc002 = false;
                                                      } else {
                                                        jjtree.popNode();
                                                      }
                                                      if (jjte002 instanceof RuntimeException) {
                                                        throw (RuntimeException)jjte002;
                                                      }
                                                      if (jjte002 instanceof ParseException) {
                                                        throw (ParseException)jjte002;
                                                      }
                                                      throw (Error)jjte002;
                                                    } finally {
                                                      if (jjtc002) {
                                                        jjtree.closeNodeScope(jjtn002,  3);
                                                        jjtreeCloseNodeScope(jjtn002);
                                                      }
                                                    }
/*@egen*/              )*
}

void MultiplicativeExpression()       :
{}
{
  UnaryExpression(0)(/*@bgen(jjtree) Opt */
                      {
                        YoyooOpt jjtn001 = new YoyooOpt(JJTOPT);
                        boolean jjtc001 = true;
                        jjtree.openNodeScope(jjtn001);
                        jjtreeOpenNodeScope(jjtn001);
                      }
                      try {
/*@egen*/ ( "*" | "/" | "%" )/*@bgen(jjtree)*/
                      } finally {
                        if (jjtc001) {
                          jjtree.closeNodeScope(jjtn001, true);
                          jjtreeCloseNodeScope(jjtn001);
                        }
                      }
/*@egen*/     /*@bgen(jjtree) #BionExpr( 3) */
                                                {
                                                  YoyooBionExpr jjtn002 = new YoyooBionExpr(JJTBIONEXPR);
                                                  boolean jjtc002 = true;
                                                  jjtree.openNodeScope(jjtn002);
                                                  jjtreeOpenNodeScope(jjtn002);
                                                }
                                                try {
/*@egen*/  UnaryExpression(0)/*@bgen(jjtree)*/
                                                } catch (Throwable jjte002) {
                                                  if (jjtc002) {
                                                    jjtree.clearNodeScope(jjtn002);
                                                    jjtc002 = false;
                                                  } else {
                                                    jjtree.popNode();
                                                  }
                                                  if (jjte002 instanceof RuntimeException) {
                                                    throw (RuntimeException)jjte002;
                                                  }
                                                  if (jjte002 instanceof ParseException) {
                                                    throw (ParseException)jjte002;
                                                  }
                                                  throw (Error)jjte002;
                                                } finally {
                                                  if (jjtc002) {
                                                    jjtree.closeNodeScope(jjtn002,  3);
                                                    jjtreeCloseNodeScope(jjtn002);
                                                  }
                                                }
/*@egen*/               )*
}

void UnaryExpression(int i)       :
{
	int j = i;
}
{
  (/*@bgen(jjtree) PrefixOpt */
   {
     YoyooPrefixOpt jjtn001 = new YoyooPrefixOpt(JJTPREFIXOPT);
     boolean jjtc001 = true;
     jjtree.openNodeScope(jjtn001);
     jjtreeOpenNodeScope(jjtn001);
   }
   try {
/*@egen*/
   "+"/*@bgen(jjtree)*/
   } finally {
     if (jjtc001) {
       jjtree.closeNodeScope(jjtn001, true);
       jjtreeCloseNodeScope(jjtn001);
     }
   }
/*@egen*/          {j = j+1;}  
  |/*@bgen(jjtree) PrefixOpt */
    {
      YoyooPrefixOpt jjtn002 = new YoyooPrefixOpt(JJTPREFIXOPT);
      boolean jjtc002 = true;
      jjtree.openNodeScope(jjtn002);
      jjtreeOpenNodeScope(jjtn002);
    }
    try {
/*@egen*/ "-"/*@bgen(jjtree)*/
    } finally {
      if (jjtc002) {
        jjtree.closeNodeScope(jjtn002, true);
        jjtreeCloseNodeScope(jjtn002);
      }
    }
/*@egen*/          {j = j+1;}  
  )
   UnaryExpression(j) 
|
  PreIncrementExpression(j) 
|
  PreDecrementExpression(j) 
|
  UnaryExpressionNotPlusMinus(j)
}

void PreIncrementExpression(int i)       :
{
		int j= i+1;
}
{/*@bgen(jjtree) PrefixOpt */
  {
    YoyooPrefixOpt jjtn001 = new YoyooPrefixOpt(JJTPREFIXOPT);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  "++"/*@bgen(jjtree)*/
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/           PrimaryExpression(j)
}

void PreDecrementExpression(int i)       :
{
		int j= i+1;
}
{/*@bgen(jjtree) PrefixOpt */
  {
    YoyooPrefixOpt jjtn001 = new YoyooPrefixOpt(JJTPREFIXOPT);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  "--"/*@bgen(jjtree)*/
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/           PrimaryExpression(j)
}

void UnaryExpressionNotPlusMinus(int i)       :
{
	int j = i;
}
{
  (/*@bgen(jjtree) PrefixOpt */
    {
      YoyooPrefixOpt jjtn001 = new YoyooPrefixOpt(JJTPREFIXOPT);
      boolean jjtc001 = true;
      jjtree.openNodeScope(jjtn001);
      jjtreeOpenNodeScope(jjtn001);
    }
    try {
/*@egen*/ "!"/*@bgen(jjtree)*/
    } finally {
      if (jjtc001) {
        jjtree.closeNodeScope(jjtn001, true);
        jjtreeCloseNodeScope(jjtn001);
      }
    }
/*@egen*/          {j=j+1;} ) UnaryExpression(j)
|
  LOOKAHEAD( CastLookahead() )
  CastExpression()
|
  PostfixExpression(j)
}

void PostfixExpression(int i)      :
{
	int j = i;
}
{
   PrimaryExpression(j)
   [/*@bgen(jjtree) #PostfixExpr( 2) */
    {
      YoyooPostfixExpr jjtn002 = new YoyooPostfixExpr(JJTPOSTFIXEXPR);
      boolean jjtc002 = true;
      jjtree.openNodeScope(jjtn002);
      jjtreeOpenNodeScope(jjtn002);
    }
    try {
/*@egen*/(/*@bgen(jjtree) PostfixOpt */
     {
       YoyooPostfixOpt jjtn001 = new YoyooPostfixOpt(JJTPOSTFIXOPT);
       boolean jjtc001 = true;
       jjtree.openNodeScope(jjtn001);
       jjtreeOpenNodeScope(jjtn001);
     }
     try {
/*@egen*/( "++" | "--" )/*@bgen(jjtree)*/
     } finally {
       if (jjtc001) {
         jjtree.closeNodeScope(jjtn001, true);
         jjtreeCloseNodeScope(jjtn001);
       }
     }
/*@egen*/            )/*@bgen(jjtree)*/
    } finally {
      if (jjtc002) {
        jjtree.closeNodeScope(jjtn002,  2);
        jjtreeCloseNodeScope(jjtn002);
      }
    }
/*@egen*/                 ]
 
}

// This production is to determine lookahead only.  The LOOKAHEAD specifications
// below are not used, but they are there just to indicate that we know about
// this.
void CastLookahead()      :
{}
{
  LOOKAHEAD(2)
  "(" PrimitiveType()
|
  LOOKAHEAD("(" Type() "[")
  "(" Type() "[" "]"
|
  "(" Type() ")" ( "~" | "!" | "(" | <IDENTIFIER> | "this" | "super" | "new" | Literal() )
}

void CastExpression():
{/*@bgen(jjtree) CastExpression */
  YoyooCastExpression jjtn000 = new YoyooCastExpression(JJTCASTEXPRESSION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) CastExpression */
  try {
/*@egen*/
  LOOKAHEAD("(" PrimitiveType())
  "("/*@bgen(jjtree) CastType */
      {
        YoyooCastType jjtn001 = new YoyooCastType(JJTCASTTYPE);
        boolean jjtc001 = true;
        jjtree.openNodeScope(jjtn001);
        jjtreeOpenNodeScope(jjtn001);
      }
      try {
/*@egen*/ Type()/*@bgen(jjtree)*/
      } catch (Throwable jjte001) {
        if (jjtc001) {
          jjtree.clearNodeScope(jjtn001);
          jjtc001 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte001 instanceof RuntimeException) {
          throw (RuntimeException)jjte001;
        }
        if (jjte001 instanceof ParseException) {
          throw (ParseException)jjte001;
        }
        throw (Error)jjte001;
      } finally {
        if (jjtc001) {
          jjtree.closeNodeScope(jjtn001, true);
          jjtreeCloseNodeScope(jjtn001);
        }
      }
/*@egen*/           ")"/*@bgen(jjtree) CastExpr */
                           {
                             YoyooCastExpr jjtn002 = new YoyooCastExpr(JJTCASTEXPR);
                             boolean jjtc002 = true;
                             jjtree.openNodeScope(jjtn002);
                             jjtreeOpenNodeScope(jjtn002);
                           }
                           try {
/*@egen*/ UnaryExpression(0)/*@bgen(jjtree)*/
                           } catch (Throwable jjte002) {
                             if (jjtc002) {
                               jjtree.clearNodeScope(jjtn002);
                               jjtc002 = false;
                             } else {
                               jjtree.popNode();
                             }
                             if (jjte002 instanceof RuntimeException) {
                               throw (RuntimeException)jjte002;
                             }
                             if (jjte002 instanceof ParseException) {
                               throw (ParseException)jjte002;
                             }
                             throw (Error)jjte002;
                           } finally {
                             if (jjtc002) {
                               jjtree.closeNodeScope(jjtn002, true);
                               jjtreeCloseNodeScope(jjtn002);
                             }
                           }
/*@egen*/         
|
  "("/*@bgen(jjtree) CastType */
      {
        YoyooCastType jjtn003 = new YoyooCastType(JJTCASTTYPE);
        boolean jjtc003 = true;
        jjtree.openNodeScope(jjtn003);
        jjtreeOpenNodeScope(jjtn003);
      }
      try {
/*@egen*/ Type()/*@bgen(jjtree)*/
      } catch (Throwable jjte003) {
        if (jjtc003) {
          jjtree.clearNodeScope(jjtn003);
          jjtc003 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte003 instanceof RuntimeException) {
          throw (RuntimeException)jjte003;
        }
        if (jjte003 instanceof ParseException) {
          throw (ParseException)jjte003;
        }
        throw (Error)jjte003;
      } finally {
        if (jjtc003) {
          jjtree.closeNodeScope(jjtn003, true);
          jjtreeCloseNodeScope(jjtn003);
        }
      }
/*@egen*/           ")"/*@bgen(jjtree) CastExpr */
                           {
                             YoyooCastExpr jjtn004 = new YoyooCastExpr(JJTCASTEXPR);
                             boolean jjtc004 = true;
                             jjtree.openNodeScope(jjtn004);
                             jjtreeOpenNodeScope(jjtn004);
                           }
                           try {
/*@egen*/ UnaryExpressionNotPlusMinus(0)/*@bgen(jjtree)*/
                           } catch (Throwable jjte004) {
                             if (jjtc004) {
                               jjtree.clearNodeScope(jjtn004);
                               jjtc004 = false;
                             } else {
                               jjtree.popNode();
                             }
                             if (jjte004 instanceof RuntimeException) {
                               throw (RuntimeException)jjte004;
                             }
                             if (jjte004 instanceof ParseException) {
                               throw (ParseException)jjte004;
                             }
                             throw (Error)jjte004;
                           } finally {
                             if (jjtc004) {
                               jjtree.closeNodeScope(jjtn004, true);
                               jjtreeCloseNodeScope(jjtn004);
                             }
                           }
/*@egen*/         /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void PrimaryExpression(int i)       :
{
	int j = i+1;
}
{/*@bgen(jjtree) #PrimaryExpr( j) */
  {
    YoyooPrimaryExpr jjtn001 = new YoyooPrimaryExpr(JJTPRIMARYEXPR);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  ( PrimaryPrefix() ( LOOKAHEAD(2) PrimarySuffix() {j=j+1;}   )* )/*@bgen(jjtree)*/
  } catch (Throwable jjte001) {
    if (jjtc001) {
      jjtree.clearNodeScope(jjtn001);
      jjtc001 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte001 instanceof RuntimeException) {
      throw (RuntimeException)jjte001;
    }
    if (jjte001 instanceof ParseException) {
      throw (ParseException)jjte001;
    }
    throw (Error)jjte001;
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001,  j);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/               

}

void PrimaryPrefix()       :
{
}
{
  Literal() 
|/*@bgen(jjtree) This */
  {
    YoyooThis jjtn001 = new YoyooThis(JJTTHIS);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  "this"/*@bgen(jjtree)*/
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/      
|
  ("super" "."/*@bgen(jjtree) SuperRefId */
               {
                 YoyooSuperRefId jjtn002 = new YoyooSuperRefId(JJTSUPERREFID);
                 boolean jjtc002 = true;
                 jjtree.openNodeScope(jjtn002);
                 jjtreeOpenNodeScope(jjtn002);
               }
               try {
/*@egen*/ <IDENTIFIER>/*@bgen(jjtree)*/
               } finally {
                 if (jjtc002) {
                   jjtree.closeNodeScope(jjtn002, true);
                   jjtreeCloseNodeScope(jjtn002);
                 }
               }
/*@egen*/            )
|
  "("/*@bgen(jjtree) BracketExpr */
      {
        YoyooBracketExpr jjtn003 = new YoyooBracketExpr(JJTBRACKETEXPR);
        boolean jjtc003 = true;
        jjtree.openNodeScope(jjtn003);
        jjtreeOpenNodeScope(jjtn003);
      }
      try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
      } catch (Throwable jjte003) {
        if (jjtc003) {
          jjtree.clearNodeScope(jjtn003);
          jjtc003 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte003 instanceof RuntimeException) {
          throw (RuntimeException)jjte003;
        }
        if (jjte003 instanceof ParseException) {
          throw (ParseException)jjte003;
        }
        throw (Error)jjte003;
      } finally {
        if (jjtc003) {
          jjtree.closeNodeScope(jjtn003, true);
          jjtreeCloseNodeScope(jjtn003);
        }
      }
/*@egen*/              ")"
|/*@bgen(jjtree) AlloExpr */
  {
    YoyooAlloExpr jjtn004 = new YoyooAlloExpr(JJTALLOEXPR);
    boolean jjtc004 = true;
    jjtree.openNodeScope(jjtn004);
    jjtreeOpenNodeScope(jjtn004);
  }
  try {
/*@egen*/
  AllocationExpression()/*@bgen(jjtree)*/
  } catch (Throwable jjte004) {
    if (jjtc004) {
      jjtree.clearNodeScope(jjtn004);
      jjtc004 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte004 instanceof RuntimeException) {
      throw (RuntimeException)jjte004;
    }
    if (jjte004 instanceof ParseException) {
      throw (ParseException)jjte004;
    }
    throw (Error)jjte004;
  } finally {
    if (jjtc004) {
      jjtree.closeNodeScope(jjtn004, true);
      jjtreeCloseNodeScope(jjtn004);
    }
  }
/*@egen*/          
|/*@bgen(jjtree) NameExpr */
  {
    YoyooNameExpr jjtn005 = new YoyooNameExpr(JJTNAMEEXPR);
    boolean jjtc005 = true;
    jjtree.openNodeScope(jjtn005);
    jjtreeOpenNodeScope(jjtn005);
  }
  try {
/*@egen*/
  Name()/*@bgen(jjtree)*/
  } catch (Throwable jjte005) {
    if (jjtc005) {
      jjtree.clearNodeScope(jjtn005);
      jjtc005 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte005 instanceof RuntimeException) {
      throw (RuntimeException)jjte005;
    }
    if (jjte005 instanceof ParseException) {
      throw (ParseException)jjte005;
    }
    throw (Error)jjte005;
  } finally {
    if (jjtc005) {
      jjtree.closeNodeScope(jjtn005, true);
      jjtreeCloseNodeScope(jjtn005);
    }
  }
/*@egen*/          
}

void PrimarySuffix()      :
{
}
{
  "["/*@bgen(jjtree) ArrayIndexExpr */
       {
         YoyooArrayIndexExpr jjtn001 = new YoyooArrayIndexExpr(JJTARRAYINDEXEXPR);
         boolean jjtc001 = true;
         jjtree.openNodeScope(jjtn001);
         jjtreeOpenNodeScope(jjtn001);
       }
       try {
/*@egen*/  Expression()/*@bgen(jjtree)*/
       } catch (Throwable jjte001) {
         if (jjtc001) {
           jjtree.clearNodeScope(jjtn001);
           jjtc001 = false;
         } else {
           jjtree.popNode();
         }
         if (jjte001 instanceof RuntimeException) {
           throw (RuntimeException)jjte001;
         }
         if (jjte001 instanceof ParseException) {
           throw (ParseException)jjte001;
         }
         throw (Error)jjte001;
       } finally {
         if (jjtc001) {
           jjtree.closeNodeScope(jjtn001, true);
           jjtreeCloseNodeScope(jjtn001);
         }
       }
/*@egen*/                 "]" 
|
  "."/*@bgen(jjtree) RefId */
      {
        YoyooRefId jjtn002 = new YoyooRefId(JJTREFID);
        boolean jjtc002 = true;
        jjtree.openNodeScope(jjtn002);
        jjtreeOpenNodeScope(jjtn002);
      }
      try {
/*@egen*/ <IDENTIFIER>/*@bgen(jjtree)*/
      } finally {
        if (jjtc002) {
          jjtree.closeNodeScope(jjtn002, true);
          jjtreeCloseNodeScope(jjtn002);
        }
      }
/*@egen*/       
|/*@bgen(jjtree) Arguments */
  {
    YoyooArguments jjtn003 = new YoyooArguments(JJTARGUMENTS);
    boolean jjtc003 = true;
    jjtree.openNodeScope(jjtn003);
    jjtreeOpenNodeScope(jjtn003);
  }
  try {
/*@egen*/
  Arguments()/*@bgen(jjtree)*/
  } catch (Throwable jjte003) {
    if (jjtc003) {
      jjtree.clearNodeScope(jjtn003);
      jjtc003 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte003 instanceof RuntimeException) {
      throw (RuntimeException)jjte003;
    }
    if (jjte003 instanceof ParseException) {
      throw (ParseException)jjte003;
    }
    throw (Error)jjte003;
  } finally {
    if (jjtc003) {
      jjtree.closeNodeScope(jjtn003, true);
      jjtreeCloseNodeScope(jjtn003);
    }
  }
/*@egen*/            
}

void Literal()       :
{}
{/*@bgen(jjtree) LiteralInteger */
  {
    YoyooLiteralInteger jjtn001 = new YoyooLiteralInteger(JJTLITERALINTEGER);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  <INTEGER_LITERAL>/*@bgen(jjtree)*/
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/                
|/*@bgen(jjtree) LiteralFloat */
  {
    YoyooLiteralFloat jjtn002 = new YoyooLiteralFloat(JJTLITERALFLOAT);
    boolean jjtc002 = true;
    jjtree.openNodeScope(jjtn002);
    jjtreeOpenNodeScope(jjtn002);
  }
  try {
/*@egen*/
  <FLOATING_POINT_LITERAL>/*@bgen(jjtree)*/
  } finally {
    if (jjtc002) {
      jjtree.closeNodeScope(jjtn002, true);
      jjtreeCloseNodeScope(jjtn002);
    }
  }
/*@egen*/              
|/*@bgen(jjtree) LiteralChar */
  {
    YoyooLiteralChar jjtn003 = new YoyooLiteralChar(JJTLITERALCHAR);
    boolean jjtc003 = true;
    jjtree.openNodeScope(jjtn003);
    jjtreeOpenNodeScope(jjtn003);
  }
  try {
/*@egen*/
  <CHARACTER_LITERAL>/*@bgen(jjtree)*/
  } finally {
    if (jjtc003) {
      jjtree.closeNodeScope(jjtn003, true);
      jjtreeCloseNodeScope(jjtn003);
    }
  }
/*@egen*/             
|/*@bgen(jjtree) LiteralString */
  {
    YoyooLiteralString jjtn004 = new YoyooLiteralString(JJTLITERALSTRING);
    boolean jjtc004 = true;
    jjtree.openNodeScope(jjtn004);
    jjtreeOpenNodeScope(jjtn004);
  }
  try {
/*@egen*/
  (<STRING_LITERAL>|<MULTILINE_STRING_LITERAL>)/*@bgen(jjtree)*/
  } finally {
    if (jjtc004) {
      jjtree.closeNodeScope(jjtn004, true);
      jjtreeCloseNodeScope(jjtn004);
    }
  }
/*@egen*/               
|/*@bgen(jjtree) LiteralBoolean */
  {
    YoyooLiteralBoolean jjtn005 = new YoyooLiteralBoolean(JJTLITERALBOOLEAN);
    boolean jjtc005 = true;
    jjtree.openNodeScope(jjtn005);
    jjtreeOpenNodeScope(jjtn005);
  }
  try {
/*@egen*/
  BooleanLiteral()/*@bgen(jjtree)*/
  } catch (Throwable jjte005) {
    if (jjtc005) {
      jjtree.clearNodeScope(jjtn005);
      jjtc005 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte005 instanceof RuntimeException) {
      throw (RuntimeException)jjte005;
    }
    if (jjte005 instanceof ParseException) {
      throw (ParseException)jjte005;
    }
    throw (Error)jjte005;
  } finally {
    if (jjtc005) {
      jjtree.closeNodeScope(jjtn005, true);
      jjtreeCloseNodeScope(jjtn005);
    }
  }
/*@egen*/                
|/*@bgen(jjtree) LiteralNull */
  {
    YoyooLiteralNull jjtn006 = new YoyooLiteralNull(JJTLITERALNULL);
    boolean jjtc006 = true;
    jjtree.openNodeScope(jjtn006);
    jjtreeOpenNodeScope(jjtn006);
  }
  try {
/*@egen*/
  NullLiteral()/*@bgen(jjtree)*/
  } catch (Throwable jjte006) {
    if (jjtc006) {
      jjtree.clearNodeScope(jjtn006);
      jjtc006 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte006 instanceof RuntimeException) {
      throw (RuntimeException)jjte006;
    }
    if (jjte006 instanceof ParseException) {
      throw (ParseException)jjte006;
    }
    throw (Error)jjte006;
  } finally {
    if (jjtc006) {
      jjtree.closeNodeScope(jjtn006, true);
      jjtreeCloseNodeScope(jjtn006);
    }
  }
/*@egen*/             
|
  SpecialExpr() 	  
 
}

void BooleanLiteral()       :
{}
{
  "true"
|
  "false"
}

void NullLiteral()       :
{}
{
  "null"
}

void SpecialExprType()                  :
{/*@bgen(jjtree) SpecialExprType */
  YoyooSpecialExprType jjtn000 = new YoyooSpecialExprType(JJTSPECIALEXPRTYPE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) SpecialExprType */
        try {
/*@egen*/
	<YOYOOEXPR> "/*<"/*@bgen(jjtree) SpecialExprTypeName */
                          {
                            YoyooSpecialExprTypeName jjtn001 = new YoyooSpecialExprTypeName(JJTSPECIALEXPRTYPENAME);
                            boolean jjtc001 = true;
                            jjtree.openNodeScope(jjtn001);
                            jjtreeOpenNodeScope(jjtn001);
                          }
                          try {
/*@egen*/ <IDENTIFIER>/*@bgen(jjtree)*/
                          } finally {
                            if (jjtc001) {
                              jjtree.closeNodeScope(jjtn001, true);
                              jjtreeCloseNodeScope(jjtn001);
                            }
                          }
/*@egen*/                     ">*/" 
	((/*@bgen(jjtree) ArrayDecl */
           {
             YoyooArrayDecl jjtn002 = new YoyooArrayDecl(JJTARRAYDECL);
             boolean jjtc002 = true;
             jjtree.openNodeScope(jjtn002);
             jjtreeOpenNodeScope(jjtn002);
           }
           try {
/*@egen*/ ("[" "]")/*@bgen(jjtree)*/
           } finally {
             if (jjtc002) {
               jjtree.closeNodeScope(jjtn002, true);
               jjtreeCloseNodeScope(jjtn002);
             }
           }
/*@egen*/           )*)/*@bgen(jjtree)*/
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
            jjtreeCloseNodeScope(jjtn000);
          }
        }
/*@egen*/ 
}

void SpecialExpr()              :
{/*@bgen(jjtree) SpecialExpr */
  YoyooSpecialExpr jjtn000 = new YoyooSpecialExpr(JJTSPECIALEXPR);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) SpecialExpr */
        try {
/*@egen*/
	"/"/*@bgen(jjtree) SpecialExprBody */
            {
              YoyooSpecialExprBody jjtn001 = new YoyooSpecialExprBody(JJTSPECIALEXPRBODY);
              boolean jjtc001 = true;
              jjtree.openNodeScope(jjtn001);
              jjtreeOpenNodeScope(jjtn001);
            }
            try {
/*@egen*/ (<STRING_LITERAL> | <MULTILINE_STRING_LITERAL>)/*@bgen(jjtree)*/
            } finally {
              if (jjtc001) {
                jjtree.closeNodeScope(jjtn001, true);
                jjtreeCloseNodeScope(jjtn001);
              }
            }
/*@egen*/                  "/"/*@bgen(jjtree)*/
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
            jjtreeCloseNodeScope(jjtn000);
          }
        }
/*@egen*/
}

void Ref()      :
{/*@bgen(jjtree) Ref */
  YoyooRef jjtn000 = new YoyooRef(JJTREF);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Ref */
        try {
/*@egen*/
	"ref" "/*<"/*@bgen(jjtree) RefValueType */
                    {
                      YoyooRefValueType jjtn001 = new YoyooRefValueType(JJTREFVALUETYPE);
                      boolean jjtc001 = true;
                      jjtree.openNodeScope(jjtn001);
                      jjtreeOpenNodeScope(jjtn001);
                    }
                    try {
/*@egen*/ Type()/*@bgen(jjtree)*/
                    } catch (Throwable jjte001) {
                      if (jjtc001) {
                        jjtree.clearNodeScope(jjtn001);
                        jjtc001 = false;
                      } else {
                        jjtree.popNode();
                      }
                      if (jjte001 instanceof RuntimeException) {
                        throw (RuntimeException)jjte001;
                      }
                      if (jjte001 instanceof ParseException) {
                        throw (ParseException)jjte001;
                      }
                      throw (Error)jjte001;
                    } finally {
                      if (jjtc001) {
                        jjtree.closeNodeScope(jjtn001, true);
                        jjtreeCloseNodeScope(jjtn001);
                      }
                    }
/*@egen*/              ">*/" 
	((/*@bgen(jjtree) ArrayDecl */
           {
             YoyooArrayDecl jjtn002 = new YoyooArrayDecl(JJTARRAYDECL);
             boolean jjtc002 = true;
             jjtree.openNodeScope(jjtn002);
             jjtreeOpenNodeScope(jjtn002);
           }
           try {
/*@egen*/ ("[" "]")/*@bgen(jjtree)*/
           } finally {
             if (jjtc002) {
               jjtree.closeNodeScope(jjtn002, true);
               jjtreeCloseNodeScope(jjtn002);
             }
           }
/*@egen*/           )*)/*@bgen(jjtree)*/
        } catch (Throwable jjte000) {
          if (jjtc000) {
            jjtree.clearNodeScope(jjtn000);
            jjtc000 = false;
          } else {
            jjtree.popNode();
          }
          if (jjte000 instanceof RuntimeException) {
            throw (RuntimeException)jjte000;
          }
          if (jjte000 instanceof ParseException) {
            throw (ParseException)jjte000;
          }
          throw (Error)jjte000;
        } finally {
          if (jjtc000) {
            jjtree.closeNodeScope(jjtn000, true);
            jjtreeCloseNodeScope(jjtn000);
          }
        }
/*@egen*/ 
}

void Arguments()      :
{}
{
  "(" [ ArgumentList() ] ")"
}

void ArgumentList()       :
{}
{
  (/*@bgen(jjtree) #Argument(true) */
   {
     YoyooArgument jjtn001 = new YoyooArgument(JJTARGUMENT);
     boolean jjtc001 = true;
     jjtree.openNodeScope(jjtn001);
     jjtreeOpenNodeScope(jjtn001);
   }
   try {
/*@egen*/Expression()/*@bgen(jjtree)*/
   } catch (Throwable jjte001) {
     if (jjtc001) {
       jjtree.clearNodeScope(jjtn001);
       jjtc001 = false;
     } else {
       jjtree.popNode();
     }
     if (jjte001 instanceof RuntimeException) {
       throw (RuntimeException)jjte001;
     }
     if (jjte001 instanceof ParseException) {
       throw (ParseException)jjte001;
     }
     throw (Error)jjte001;
   } finally {
     if (jjtc001) {
       jjtree.closeNodeScope(jjtn001, true);
       jjtreeCloseNodeScope(jjtn001);
     }
   }
/*@egen*/            ) ( "," (/*@bgen(jjtree) #Argument(true) */
                                    {
                                      YoyooArgument jjtn002 = new YoyooArgument(JJTARGUMENT);
                                      boolean jjtc002 = true;
                                      jjtree.openNodeScope(jjtn002);
                                      jjtreeOpenNodeScope(jjtn002);
                                    }
                                    try {
/*@egen*/Expression()/*@bgen(jjtree)*/
                                    } catch (Throwable jjte002) {
                                      if (jjtc002) {
                                        jjtree.clearNodeScope(jjtn002);
                                        jjtc002 = false;
                                      } else {
                                        jjtree.popNode();
                                      }
                                      if (jjte002 instanceof RuntimeException) {
                                        throw (RuntimeException)jjte002;
                                      }
                                      if (jjte002 instanceof ParseException) {
                                        throw (ParseException)jjte002;
                                      }
                                      throw (Error)jjte002;
                                    } finally {
                                      if (jjtc002) {
                                        jjtree.closeNodeScope(jjtn002, true);
                                        jjtreeCloseNodeScope(jjtn002);
                                      }
                                    }
/*@egen*/            ) )*
}




void AllocationExpression()       :
{}
{
  LOOKAHEAD(2)/*@bgen(jjtree) AlloPrimitiveExpr */
  {
    YoyooAlloPrimitiveExpr jjtn001 = new YoyooAlloPrimitiveExpr(JJTALLOPRIMITIVEEXPR);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  (
  "new" (PrimitiveType()) ArrayDimsAndInits()
  )/*@bgen(jjtree)*/
  } catch (Throwable jjte001) {
    if (jjtc001) {
      jjtree.clearNodeScope(jjtn001);
      jjtc001 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte001 instanceof RuntimeException) {
      throw (RuntimeException)jjte001;
    }
    if (jjte001 instanceof ParseException) {
      throw (ParseException)jjte001;
    }
    throw (Error)jjte001;
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/                  
|/*@bgen(jjtree) AlloReferenceExpr */
  {
    YoyooAlloReferenceExpr jjtn003 = new YoyooAlloReferenceExpr(JJTALLOREFERENCEEXPR);
    boolean jjtc003 = true;
    jjtree.openNodeScope(jjtn003);
    jjtreeOpenNodeScope(jjtn003);
  }
  try {
/*@egen*/
  (	
  "new" (/*@bgen(jjtree) AllocationName */
         {
           YoyooAllocationName jjtn002 = new YoyooAllocationName(JJTALLOCATIONNAME);
           boolean jjtc002 = true;
           jjtree.openNodeScope(jjtn002);
           jjtreeOpenNodeScope(jjtn002);
         }
         try {
/*@egen*/ClassOrInterfaceType()/*@bgen(jjtree)*/
         } catch (Throwable jjte002) {
           if (jjtc002) {
             jjtree.clearNodeScope(jjtn002);
             jjtc002 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte002 instanceof RuntimeException) {
             throw (RuntimeException)jjte002;
           }
           if (jjte002 instanceof ParseException) {
             throw (ParseException)jjte002;
           }
           throw (Error)jjte002;
         } finally {
           if (jjtc002) {
             jjtree.closeNodeScope(jjtn002, true);
             jjtreeCloseNodeScope(jjtn002);
           }
         }
/*@egen*/               )
  (
      ArrayDimsAndInits()|Arguments()
  )
  )/*@bgen(jjtree)*/
  } catch (Throwable jjte003) {
    if (jjtc003) {
      jjtree.clearNodeScope(jjtn003);
      jjtc003 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte003 instanceof RuntimeException) {
      throw (RuntimeException)jjte003;
    }
    if (jjte003 instanceof ParseException) {
      throw (ParseException)jjte003;
    }
    throw (Error)jjte003;
  } finally {
    if (jjtc003) {
      jjtree.closeNodeScope(jjtn003, true);
      jjtreeCloseNodeScope(jjtn003);
    }
  }
/*@egen*/                  
  
}
/*
void ReferenceType() #ReferenceNameType :
{}
{  
  Name() 
}
*/

void ArrayDimsAndInits()  :
{/*@bgen(jjtree) ArrayDimsAndInits */
  YoyooArrayDimsAndInits jjtn000 = new YoyooArrayDimsAndInits(JJTARRAYDIMSANDINITS);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ArrayDimsAndInits */
  try {
/*@egen*/
  LOOKAHEAD(2)
  ( LOOKAHEAD(2) "["/*@bgen(jjtree) ArrayDimsExpr */
                     {
                       YoyooArrayDimsExpr jjtn001 = new YoyooArrayDimsExpr(JJTARRAYDIMSEXPR);
                       boolean jjtc001 = true;
                       jjtree.openNodeScope(jjtn001);
                       jjtreeOpenNodeScope(jjtn001);
                     }
                     try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                     } catch (Throwable jjte001) {
                       if (jjtc001) {
                         jjtree.clearNodeScope(jjtn001);
                         jjtc001 = false;
                       } else {
                         jjtree.popNode();
                       }
                       if (jjte001 instanceof RuntimeException) {
                         throw (RuntimeException)jjte001;
                       }
                       if (jjte001 instanceof ParseException) {
                         throw (ParseException)jjte001;
                       }
                       throw (Error)jjte001;
                     } finally {
                       if (jjtc001) {
                         jjtree.closeNodeScope(jjtn001, true);
                         jjtreeCloseNodeScope(jjtn001);
                       }
                     }
/*@egen*/               "]" )+ ( LOOKAHEAD(2) "["/*@bgen(jjtree) ArrayDims */
                                                                          {
                                                                            YoyooArrayDims jjtn002 = new YoyooArrayDims(JJTARRAYDIMS);
                                                                            boolean jjtc002 = true;
                                                                            jjtree.openNodeScope(jjtn002);
                                                                            jjtreeOpenNodeScope(jjtn002);
                                                                          }
                                                                          try {
/*@egen*/ "]"/*@bgen(jjtree)*/
                                                                          } finally {
                                                                            if (jjtc002) {
                                                                              jjtree.closeNodeScope(jjtn002, true);
                                                                              jjtreeCloseNodeScope(jjtn002);
                                                                            }
                                                                          }
/*@egen*/           )*
|
  ( "["/*@bgen(jjtree) ArrayDims */
        {
          YoyooArrayDims jjtn003 = new YoyooArrayDims(JJTARRAYDIMS);
          boolean jjtc003 = true;
          jjtree.openNodeScope(jjtn003);
          jjtreeOpenNodeScope(jjtn003);
        }
        try {
/*@egen*/ "]"/*@bgen(jjtree)*/
        } finally {
          if (jjtc003) {
            jjtree.closeNodeScope(jjtn003, true);
            jjtreeCloseNodeScope(jjtn003);
          }
        }
/*@egen*/           )+ ArrayInitializer()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}


/*
 * Statement syntax follows.
 */

void Statement()       :
{}
{

  LOOKAHEAD(2)
  LabeledStatement()
|
  Block()
|
  EmptyStatement()
|
  StatementExpression() ";"
|
  SwitchStatement()
|
  IfStatement()
|
  WhileStatement()
|
  DoStatement()
|
  ForStatement()
|
  BreakStatement()
|
  ContinueStatement()
|
  ReturnStatement()
|
  ThrowStatement()
|
  SynchronizedStatement()
|
  TryStatement()
}

void LabeledStatement()  :
{/*@bgen(jjtree) LabeledStatement */
  YoyooLabeledStatement jjtn000 = new YoyooLabeledStatement(JJTLABELEDSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) LabeledStatement */
  try {
/*@egen*//*@bgen(jjtree) LabeledStmLabel */
  {
    YoyooLabeledStmLabel jjtn001 = new YoyooLabeledStmLabel(JJTLABELEDSTMLABEL);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  <IDENTIFIER>/*@bgen(jjtree)*/
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/                  ":"/*@bgen(jjtree) LabeledStmBody */
                                    {
                                      YoyooLabeledStmBody jjtn002 = new YoyooLabeledStmBody(JJTLABELEDSTMBODY);
                                      boolean jjtc002 = true;
                                      jjtree.openNodeScope(jjtn002);
                                      jjtreeOpenNodeScope(jjtn002);
                                    }
                                    try {
/*@egen*/ Statement()/*@bgen(jjtree)*/
                                    } catch (Throwable jjte002) {
                                      if (jjtc002) {
                                        jjtree.clearNodeScope(jjtn002);
                                        jjtc002 = false;
                                      } else {
                                        jjtree.popNode();
                                      }
                                      if (jjte002 instanceof RuntimeException) {
                                        throw (RuntimeException)jjte002;
                                      }
                                      if (jjte002 instanceof ParseException) {
                                        throw (ParseException)jjte002;
                                      }
                                      throw (Error)jjte002;
                                    } finally {
                                      if (jjtc002) {
                                        jjtree.closeNodeScope(jjtn002, true);
                                        jjtreeCloseNodeScope(jjtn002);
                                      }
                                    }
/*@egen*/                /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void Block()  :
{/*@bgen(jjtree) Block */
  YoyooBlock jjtn000 = new YoyooBlock(JJTBLOCK);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Block */
  try {
/*@egen*/
  "{" ( BlockStatement() )* "}"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void BlockStatement()        :
{}
{
  LOOKAHEAD( (Type()|Ref()|SpecialExprType()) <IDENTIFIER>)
  LocalVariableDeclaration() ";"
|/*@bgen(jjtree) BlockStatementBodyStm */
  {
    YoyooBlockStatementBodyStm jjtn001 = new YoyooBlockStatementBodyStm(JJTBLOCKSTATEMENTBODYSTM);
    boolean jjtc001 = true;
    jjtree.openNodeScope(jjtn001);
    jjtreeOpenNodeScope(jjtn001);
  }
  try {
/*@egen*/
  Statement()/*@bgen(jjtree)*/
  } catch (Throwable jjte001) {
    if (jjtc001) {
      jjtree.clearNodeScope(jjtn001);
      jjtc001 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte001 instanceof RuntimeException) {
      throw (RuntimeException)jjte001;
    }
    if (jjte001 instanceof ParseException) {
      throw (ParseException)jjte001;
    }
    throw (Error)jjte001;
  } finally {
    if (jjtc001) {
      jjtree.closeNodeScope(jjtn001, true);
      jjtreeCloseNodeScope(jjtn001);
    }
  }
/*@egen*/                       
}

void LocalVariableDeclaration() :
{/*@bgen(jjtree) LocalVariableDeclaration */
  YoyooLocalVariableDeclaration jjtn000 = new YoyooLocalVariableDeclaration(JJTLOCALVARIABLEDECLARATION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) LocalVariableDeclaration */
  try {
/*@egen*/
  (Type()|Ref()|SpecialExprType()) VariableDeclarator()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/ 
}

void EmptyStatement()  :
{/*@bgen(jjtree) EmptyStatement */
  YoyooEmptyStatement jjtn000 = new YoyooEmptyStatement(JJTEMPTYSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) EmptyStatement */
  try {
/*@egen*/
  ";"/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void StatementExpression()  :
/*
 * The last expansion of this production accepts more than the legal
 * Java expansions for StatementExpression.  This expansion does not
 * use PostfixExpression for performance reasons.
 */
{/*@bgen(jjtree) StatementExpression */
  YoyooStatementExpression jjtn000 = new YoyooStatementExpression(JJTSTATEMENTEXPRESSION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) StatementExpression */
  try {
/*@egen*/
  PreIncrementExpression(0)
|
  PreDecrementExpression(0)
|
  PrimaryExpression(0)
  [/*@bgen(jjtree) StmExprPostOpt */
    {
      YoyooStmExprPostOpt jjtn001 = new YoyooStmExprPostOpt(JJTSTMEXPRPOSTOPT);
      boolean jjtc001 = true;
      jjtree.openNodeScope(jjtn001);
      jjtreeOpenNodeScope(jjtn001);
    }
    try {
/*@egen*/
    "++"/*@bgen(jjtree)*/
    } finally {
      if (jjtc001) {
        jjtree.closeNodeScope(jjtn001, true);
        jjtreeCloseNodeScope(jjtn001);
      }
    }
/*@egen*/                
  |/*@bgen(jjtree) StmExprPostOpt */
    {
      YoyooStmExprPostOpt jjtn002 = new YoyooStmExprPostOpt(JJTSTMEXPRPOSTOPT);
      boolean jjtc002 = true;
      jjtree.openNodeScope(jjtn002);
      jjtreeOpenNodeScope(jjtn002);
    }
    try {
/*@egen*/
    "--"/*@bgen(jjtree)*/
    } finally {
      if (jjtc002) {
        jjtree.closeNodeScope(jjtn002, true);
        jjtreeCloseNodeScope(jjtn002);
      }
    }
/*@egen*/                
  |
    AssignmentOperator()/*@bgen(jjtree) StmExprAssignExpr */
                         {
                           YoyooStmExprAssignExpr jjtn003 = new YoyooStmExprAssignExpr(JJTSTMEXPRASSIGNEXPR);
                           boolean jjtc003 = true;
                           jjtree.openNodeScope(jjtn003);
                           jjtreeOpenNodeScope(jjtn003);
                         }
                         try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                         } catch (Throwable jjte003) {
                           if (jjtc003) {
                             jjtree.clearNodeScope(jjtn003);
                             jjtc003 = false;
                           } else {
                             jjtree.popNode();
                           }
                           if (jjte003 instanceof RuntimeException) {
                             throw (RuntimeException)jjte003;
                           }
                           if (jjte003 instanceof ParseException) {
                             throw (ParseException)jjte003;
                           }
                           throw (Error)jjte003;
                         } finally {
                           if (jjtc003) {
                             jjtree.closeNodeScope(jjtn003, true);
                             jjtreeCloseNodeScope(jjtn003);
                           }
                         }
/*@egen*/                      
  ]/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void SwitchStatement() :
{/*@bgen(jjtree) SwitchStatement */
  YoyooSwitchStatement jjtn000 = new YoyooSwitchStatement(JJTSWITCHSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) SwitchStatement */
  try {
/*@egen*/
  "switch" "("/*@bgen(jjtree) SwitchKey */
               {
                 YoyooSwitchKey jjtn001 = new YoyooSwitchKey(JJTSWITCHKEY);
                 boolean jjtc001 = true;
                 jjtree.openNodeScope(jjtn001);
                 jjtreeOpenNodeScope(jjtn001);
               }
               try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
               } catch (Throwable jjte001) {
                 if (jjtc001) {
                   jjtree.clearNodeScope(jjtn001);
                   jjtc001 = false;
                 } else {
                   jjtree.popNode();
                 }
                 if (jjte001 instanceof RuntimeException) {
                   throw (RuntimeException)jjte001;
                 }
                 if (jjte001 instanceof ParseException) {
                   throw (ParseException)jjte001;
                 }
                 throw (Error)jjte001;
               } finally {
                 if (jjtc001) {
                   jjtree.closeNodeScope(jjtn001, true);
                   jjtreeCloseNodeScope(jjtn001);
                 }
               }
/*@egen*/            ")" "{"
    (/*@bgen(jjtree) #CaseStm(> 1) */
      {
        YoyooCaseStm jjtn004 = new YoyooCaseStm(JJTCASESTM);
        boolean jjtc004 = true;
        jjtree.openNodeScope(jjtn004);
        jjtreeOpenNodeScope(jjtn004);
      }
      try {
/*@egen*/ ( (LOOKAHEAD(2)/*@bgen(jjtree) SwitchCase */
                      {
                        YoyooSwitchCase jjtn002 = new YoyooSwitchCase(JJTSWITCHCASE);
                        boolean jjtc002 = true;
                        jjtree.openNodeScope(jjtn002);
                        jjtreeOpenNodeScope(jjtn002);
                      }
                      try {
/*@egen*/ SwitchLabel()/*@bgen(jjtree)*/
                      } catch (Throwable jjte002) {
                        if (jjtc002) {
                          jjtree.clearNodeScope(jjtn002);
                          jjtc002 = false;
                        } else {
                          jjtree.popNode();
                        }
                        if (jjte002 instanceof RuntimeException) {
                          throw (RuntimeException)jjte002;
                        }
                        if (jjte002 instanceof ParseException) {
                          throw (ParseException)jjte002;
                        }
                        throw (Error)jjte002;
                      } finally {
                        if (jjtc002) {
                          jjtree.closeNodeScope(jjtn002, true);
                          jjtreeCloseNodeScope(jjtn002);
                        }
                      }
/*@egen*/           )+ (/*@bgen(jjtree) CaseBlockStm */
                                                   {
                                                     YoyooCaseBlockStm jjtn003 = new YoyooCaseBlockStm(JJTCASEBLOCKSTM);
                                                     boolean jjtc003 = true;
                                                     jjtree.openNodeScope(jjtn003);
                                                     jjtreeOpenNodeScope(jjtn003);
                                                   }
                                                   try {
/*@egen*/ BlockStatement()/*@bgen(jjtree)*/
                                                   } catch (Throwable jjte003) {
                                                     if (jjtc003) {
                                                       jjtree.clearNodeScope(jjtn003);
                                                       jjtc003 = false;
                                                     } else {
                                                       jjtree.popNode();
                                                     }
                                                     if (jjte003 instanceof RuntimeException) {
                                                       throw (RuntimeException)jjte003;
                                                     }
                                                     if (jjte003 instanceof ParseException) {
                                                       throw (ParseException)jjte003;
                                                     }
                                                     throw (Error)jjte003;
                                                   } finally {
                                                     if (jjtc003) {
                                                       jjtree.closeNodeScope(jjtn003, true);
                                                       jjtreeCloseNodeScope(jjtn003);
                                                     }
                                                   }
/*@egen*/              )*)/*@bgen(jjtree)*/
      } catch (Throwable jjte004) {
        if (jjtc004) {
          jjtree.clearNodeScope(jjtn004);
          jjtc004 = false;
        } else {
          jjtree.popNode();
        }
        if (jjte004 instanceof RuntimeException) {
          throw (RuntimeException)jjte004;
        }
        if (jjte004 instanceof ParseException) {
          throw (ParseException)jjte004;
        }
        throw (Error)jjte004;
      } finally {
        if (jjtc004) {
          jjtree.closeNodeScope(jjtn004, jjtree.nodeArity() > 1);
          jjtreeCloseNodeScope(jjtn004);
        }
      }
/*@egen*/              )* 
  "}"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void SwitchLabel()       :
{}
{

	("default"/*@bgen(jjtree) SwitchDefault */
                   {
                     YoyooSwitchDefault jjtn001 = new YoyooSwitchDefault(JJTSWITCHDEFAULT);
                     boolean jjtc001 = true;
                     jjtree.openNodeScope(jjtn001);
                     jjtreeOpenNodeScope(jjtn001);
                   }
                   try {
/*@egen*/ ":"/*@bgen(jjtree)*/
                   } finally {
                     if (jjtc001) {
                       jjtree.closeNodeScope(jjtn001, true);
                       jjtreeCloseNodeScope(jjtn001);
                     }
                   }
/*@egen*/               )
|	 

	("case"/*@bgen(jjtree) CaseExpr */
                {
                  YoyooCaseExpr jjtn002 = new YoyooCaseExpr(JJTCASEEXPR);
                  boolean jjtc002 = true;
                  jjtree.openNodeScope(jjtn002);
                  jjtreeOpenNodeScope(jjtn002);
                }
                try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                } catch (Throwable jjte002) {
                  if (jjtc002) {
                    jjtree.clearNodeScope(jjtn002);
                    jjtc002 = false;
                  } else {
                    jjtree.popNode();
                  }
                  if (jjte002 instanceof RuntimeException) {
                    throw (RuntimeException)jjte002;
                  }
                  if (jjte002 instanceof ParseException) {
                    throw (ParseException)jjte002;
                  }
                  throw (Error)jjte002;
                } finally {
                  if (jjtc002) {
                    jjtree.closeNodeScope(jjtn002, true);
                    jjtreeCloseNodeScope(jjtn002);
                  }
                }
/*@egen*/           ":")
 
}

void IfStatement()  :
/*
 * The disambiguating algorithm of JavaCC automatically binds dangling
 * else's to the innermost if statement.  The LOOKAHEAD specification
 * is to tell JavaCC that we know what we are doing.
 */
{/*@bgen(jjtree) IfStatement */
  YoyooIfStatement jjtn000 = new YoyooIfStatement(JJTIFSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) IfStatement */
  try {
/*@egen*/
  "if" "("/*@bgen(jjtree) IfCondExpr */
           {
             YoyooIfCondExpr jjtn001 = new YoyooIfCondExpr(JJTIFCONDEXPR);
             boolean jjtc001 = true;
             jjtree.openNodeScope(jjtn001);
             jjtreeOpenNodeScope(jjtn001);
           }
           try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
           } catch (Throwable jjte001) {
             if (jjtc001) {
               jjtree.clearNodeScope(jjtn001);
               jjtc001 = false;
             } else {
               jjtree.popNode();
             }
             if (jjte001 instanceof RuntimeException) {
               throw (RuntimeException)jjte001;
             }
             if (jjte001 instanceof ParseException) {
               throw (ParseException)jjte001;
             }
             throw (Error)jjte001;
           } finally {
             if (jjtc001) {
               jjtree.closeNodeScope(jjtn001, true);
               jjtreeCloseNodeScope(jjtn001);
             }
           }
/*@egen*/             ")"/*@bgen(jjtree) IfStm */
                                        {
                                          YoyooIfStm jjtn002 = new YoyooIfStm(JJTIFSTM);
                                          boolean jjtc002 = true;
                                          jjtree.openNodeScope(jjtn002);
                                          jjtreeOpenNodeScope(jjtn002);
                                        }
                                        try {
/*@egen*/ Statement()/*@bgen(jjtree)*/
                                        } catch (Throwable jjte002) {
                                          if (jjtc002) {
                                            jjtree.clearNodeScope(jjtn002);
                                            jjtc002 = false;
                                          } else {
                                            jjtree.popNode();
                                          }
                                          if (jjte002 instanceof RuntimeException) {
                                            throw (RuntimeException)jjte002;
                                          }
                                          if (jjte002 instanceof ParseException) {
                                            throw (ParseException)jjte002;
                                          }
                                          throw (Error)jjte002;
                                        } finally {
                                          if (jjtc002) {
                                            jjtree.closeNodeScope(jjtn002, true);
                                            jjtreeCloseNodeScope(jjtn002);
                                          }
                                        }
/*@egen*/       [ LOOKAHEAD(1) "else"/*@bgen(jjtree) ElseStm */
                                                                                {
                                                                                  YoyooElseStm jjtn003 = new YoyooElseStm(JJTELSESTM);
                                                                                  boolean jjtc003 = true;
                                                                                  jjtree.openNodeScope(jjtn003);
                                                                                  jjtreeOpenNodeScope(jjtn003);
                                                                                }
                                                                                try {
/*@egen*/ Statement()/*@bgen(jjtree)*/
                                                                                } catch (Throwable jjte003) {
                                                                                  if (jjtc003) {
                                                                                    jjtree.clearNodeScope(jjtn003);
                                                                                    jjtc003 = false;
                                                                                  } else {
                                                                                    jjtree.popNode();
                                                                                  }
                                                                                  if (jjte003 instanceof RuntimeException) {
                                                                                    throw (RuntimeException)jjte003;
                                                                                  }
                                                                                  if (jjte003 instanceof ParseException) {
                                                                                    throw (ParseException)jjte003;
                                                                                  }
                                                                                  throw (Error)jjte003;
                                                                                } finally {
                                                                                  if (jjtc003) {
                                                                                    jjtree.closeNodeScope(jjtn003, true);
                                                                                    jjtreeCloseNodeScope(jjtn003);
                                                                                  }
                                                                                }
/*@egen*/         ]/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void WhileStatement()  :
{/*@bgen(jjtree) WhileStatement */
  YoyooWhileStatement jjtn000 = new YoyooWhileStatement(JJTWHILESTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) WhileStatement */
  try {
/*@egen*/
  "while" "("/*@bgen(jjtree) WhileCond */
              {
                YoyooWhileCond jjtn001 = new YoyooWhileCond(JJTWHILECOND);
                boolean jjtc001 = true;
                jjtree.openNodeScope(jjtn001);
                jjtreeOpenNodeScope(jjtn001);
              }
              try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
              } catch (Throwable jjte001) {
                if (jjtc001) {
                  jjtree.clearNodeScope(jjtn001);
                  jjtc001 = false;
                } else {
                  jjtree.popNode();
                }
                if (jjte001 instanceof RuntimeException) {
                  throw (RuntimeException)jjte001;
                }
                if (jjte001 instanceof ParseException) {
                  throw (ParseException)jjte001;
                }
                throw (Error)jjte001;
              } finally {
                if (jjtc001) {
                  jjtree.closeNodeScope(jjtn001, true);
                  jjtreeCloseNodeScope(jjtn001);
                }
              }
/*@egen*/           ")"/*@bgen(jjtree) LoopStm */
                                         {
                                           YoyooLoopStm jjtn002 = new YoyooLoopStm(JJTLOOPSTM);
                                           boolean jjtc002 = true;
                                           jjtree.openNodeScope(jjtn002);
                                           jjtreeOpenNodeScope(jjtn002);
                                         }
                                         try {
/*@egen*/ Statement()/*@bgen(jjtree)*/
                                         } catch (Throwable jjte002) {
                                           if (jjtc002) {
                                             jjtree.clearNodeScope(jjtn002);
                                             jjtc002 = false;
                                           } else {
                                             jjtree.popNode();
                                           }
                                           if (jjte002 instanceof RuntimeException) {
                                             throw (RuntimeException)jjte002;
                                           }
                                           if (jjte002 instanceof ParseException) {
                                             throw (ParseException)jjte002;
                                           }
                                           throw (Error)jjte002;
                                         } finally {
                                           if (jjtc002) {
                                             jjtree.closeNodeScope(jjtn002, true);
                                             jjtreeCloseNodeScope(jjtn002);
                                           }
                                         }
/*@egen*/         /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void DoStatement()  :
{/*@bgen(jjtree) DoStatement */
  YoyooDoStatement jjtn000 = new YoyooDoStatement(JJTDOSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) DoStatement */
  try {
/*@egen*/
  "do"/*@bgen(jjtree) LoopStm */
       {
         YoyooLoopStm jjtn001 = new YoyooLoopStm(JJTLOOPSTM);
         boolean jjtc001 = true;
         jjtree.openNodeScope(jjtn001);
         jjtreeOpenNodeScope(jjtn001);
       }
       try {
/*@egen*/ Statement()/*@bgen(jjtree)*/
       } catch (Throwable jjte001) {
         if (jjtc001) {
           jjtree.clearNodeScope(jjtn001);
           jjtc001 = false;
         } else {
           jjtree.popNode();
         }
         if (jjte001 instanceof RuntimeException) {
           throw (RuntimeException)jjte001;
         }
         if (jjte001 instanceof ParseException) {
           throw (ParseException)jjte001;
         }
         throw (Error)jjte001;
       } finally {
         if (jjtc001) {
           jjtree.closeNodeScope(jjtn001, true);
           jjtreeCloseNodeScope(jjtn001);
         }
       }
/*@egen*/         "while" "("/*@bgen(jjtree) DoCond */
                                       {
                                         YoyooDoCond jjtn002 = new YoyooDoCond(JJTDOCOND);
                                         boolean jjtc002 = true;
                                         jjtree.openNodeScope(jjtn002);
                                         jjtreeOpenNodeScope(jjtn002);
                                       }
                                       try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                       } catch (Throwable jjte002) {
                                         if (jjtc002) {
                                           jjtree.clearNodeScope(jjtn002);
                                           jjtc002 = false;
                                         } else {
                                           jjtree.popNode();
                                         }
                                         if (jjte002 instanceof RuntimeException) {
                                           throw (RuntimeException)jjte002;
                                         }
                                         if (jjte002 instanceof ParseException) {
                                           throw (ParseException)jjte002;
                                         }
                                         throw (Error)jjte002;
                                       } finally {
                                         if (jjtc002) {
                                           jjtree.closeNodeScope(jjtn002, true);
                                           jjtreeCloseNodeScope(jjtn002);
                                         }
                                       }
/*@egen*/        ")" ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void ForStatement()  :
{/*@bgen(jjtree) ForStatement */
  YoyooForStatement jjtn000 = new YoyooForStatement(JJTFORSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ForStatement */
  try {
/*@egen*/
  "for" "(" [ ForInit() ] ";" [/*@bgen(jjtree) ForCond */
                                {
                                  YoyooForCond jjtn001 = new YoyooForCond(JJTFORCOND);
                                  boolean jjtc001 = true;
                                  jjtree.openNodeScope(jjtn001);
                                  jjtreeOpenNodeScope(jjtn001);
                                }
                                try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                                } catch (Throwable jjte001) {
                                  if (jjtc001) {
                                    jjtree.clearNodeScope(jjtn001);
                                    jjtc001 = false;
                                  } else {
                                    jjtree.popNode();
                                  }
                                  if (jjte001 instanceof RuntimeException) {
                                    throw (RuntimeException)jjte001;
                                  }
                                  if (jjte001 instanceof ParseException) {
                                    throw (ParseException)jjte001;
                                  }
                                  throw (Error)jjte001;
                                } finally {
                                  if (jjtc001) {
                                    jjtree.closeNodeScope(jjtn001, true);
                                    jjtreeCloseNodeScope(jjtn001);
                                  }
                                }
/*@egen*/         ] ";" [ ForUpdate() ] ")"/*@bgen(jjtree) LoopStm */
                                                                               {
                                                                                 YoyooLoopStm jjtn002 = new YoyooLoopStm(JJTLOOPSTM);
                                                                                 boolean jjtc002 = true;
                                                                                 jjtree.openNodeScope(jjtn002);
                                                                                 jjtreeOpenNodeScope(jjtn002);
                                                                               }
                                                                               try {
/*@egen*/ Statement()/*@bgen(jjtree)*/
                                                                               } catch (Throwable jjte002) {
                                                                                 if (jjtc002) {
                                                                                   jjtree.clearNodeScope(jjtn002);
                                                                                   jjtc002 = false;
                                                                                 } else {
                                                                                   jjtree.popNode();
                                                                                 }
                                                                                 if (jjte002 instanceof RuntimeException) {
                                                                                   throw (RuntimeException)jjte002;
                                                                                 }
                                                                                 if (jjte002 instanceof ParseException) {
                                                                                   throw (ParseException)jjte002;
                                                                                 }
                                                                                 throw (Error)jjte002;
                                                                               } finally {
                                                                                 if (jjtc002) {
                                                                                   jjtree.closeNodeScope(jjtn002, true);
                                                                                   jjtreeCloseNodeScope(jjtn002);
                                                                                 }
                                                                               }
/*@egen*/        /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void ForInit() :
{/*@bgen(jjtree) ForInit */
  YoyooForInit jjtn000 = new YoyooForInit(JJTFORINIT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ForInit */
  try {
/*@egen*/
  LOOKAHEAD( [ "final" ] Type() <IDENTIFIER> )
  LocalVariableDeclaration()
|
  StatementExpressionList()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void StatementExpressionList()       :
{}
{
  StatementExpression() ( "," StatementExpression() )*
}

void ForUpdate() :
{/*@bgen(jjtree) ForUpdate */
  YoyooForUpdate jjtn000 = new YoyooForUpdate(JJTFORUPDATE);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ForUpdate */
  try {
/*@egen*/
  StatementExpressionList()/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void BreakStatement()  :
{/*@bgen(jjtree) BreakStatement */
  YoyooBreakStatement jjtn000 = new YoyooBreakStatement(JJTBREAKSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) BreakStatement */
  try {
/*@egen*/
  "break" [/*@bgen(jjtree) BreakLabel */
            {
              YoyooBreakLabel jjtn001 = new YoyooBreakLabel(JJTBREAKLABEL);
              boolean jjtc001 = true;
              jjtree.openNodeScope(jjtn001);
              jjtreeOpenNodeScope(jjtn001);
            }
            try {
/*@egen*/ <IDENTIFIER>/*@bgen(jjtree)*/
            } finally {
              if (jjtc001) {
                jjtree.closeNodeScope(jjtn001, true);
                jjtreeCloseNodeScope(jjtn001);
              }
            }
/*@egen*/            ] ";"/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void ContinueStatement()  :
{/*@bgen(jjtree) ContinueStatement */
  YoyooContinueStatement jjtn000 = new YoyooContinueStatement(JJTCONTINUESTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ContinueStatement */
  try {
/*@egen*/
  "continue" [/*@bgen(jjtree) ContinueLabel */
               {
                 YoyooContinueLabel jjtn001 = new YoyooContinueLabel(JJTCONTINUELABEL);
                 boolean jjtc001 = true;
                 jjtree.openNodeScope(jjtn001);
                 jjtreeOpenNodeScope(jjtn001);
               }
               try {
/*@egen*/ <IDENTIFIER>/*@bgen(jjtree)*/
               } finally {
                 if (jjtc001) {
                   jjtree.closeNodeScope(jjtn001, true);
                   jjtreeCloseNodeScope(jjtn001);
                 }
               }
/*@egen*/               ] ";"/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void ReturnStatement()  :
{/*@bgen(jjtree) ReturnStatement */
  YoyooReturnStatement jjtn000 = new YoyooReturnStatement(JJTRETURNSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ReturnStatement */
  try {
/*@egen*/
  "return" [/*@bgen(jjtree) ReturnExpr */
             {
               YoyooReturnExpr jjtn001 = new YoyooReturnExpr(JJTRETURNEXPR);
               boolean jjtc001 = true;
               jjtree.openNodeScope(jjtn001);
               jjtreeOpenNodeScope(jjtn001);
             }
             try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
             } catch (Throwable jjte001) {
               if (jjtc001) {
                 jjtree.clearNodeScope(jjtn001);
                 jjtc001 = false;
               } else {
                 jjtree.popNode();
               }
               if (jjte001 instanceof RuntimeException) {
                 throw (RuntimeException)jjte001;
               }
               if (jjte001 instanceof ParseException) {
                 throw (ParseException)jjte001;
               }
               throw (Error)jjte001;
             } finally {
               if (jjtc001) {
                 jjtree.closeNodeScope(jjtn001, true);
                 jjtreeCloseNodeScope(jjtn001);
               }
             }
/*@egen*/           ] ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void ThrowStatement():
{/*@bgen(jjtree) ThrowStatement */
  YoyooThrowStatement jjtn000 = new YoyooThrowStatement(JJTTHROWSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) ThrowStatement */
  try {
/*@egen*/
  "throw"/*@bgen(jjtree) ThrowExpr */
          {
            YoyooThrowExpr jjtn001 = new YoyooThrowExpr(JJTTHROWEXPR);
            boolean jjtc001 = true;
            jjtree.openNodeScope(jjtn001);
            jjtreeOpenNodeScope(jjtn001);
          }
          try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
          } catch (Throwable jjte001) {
            if (jjtc001) {
              jjtree.clearNodeScope(jjtn001);
              jjtc001 = false;
            } else {
              jjtree.popNode();
            }
            if (jjte001 instanceof RuntimeException) {
              throw (RuntimeException)jjte001;
            }
            if (jjte001 instanceof ParseException) {
              throw (ParseException)jjte001;
            }
            throw (Error)jjte001;
          } finally {
            if (jjtc001) {
              jjtree.closeNodeScope(jjtn001, true);
              jjtreeCloseNodeScope(jjtn001);
            }
          }
/*@egen*/           ";"/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void SynchronizedStatement():
{/*@bgen(jjtree) SynchronizedStatement */
  YoyooSynchronizedStatement jjtn000 = new YoyooSynchronizedStatement(JJTSYNCHRONIZEDSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) SynchronizedStatement */
  try {
/*@egen*/
  "synchronized" "("/*@bgen(jjtree) SynExpr */
                     {
                       YoyooSynExpr jjtn001 = new YoyooSynExpr(JJTSYNEXPR);
                       boolean jjtc001 = true;
                       jjtree.openNodeScope(jjtn001);
                       jjtreeOpenNodeScope(jjtn001);
                     }
                     try {
/*@egen*/ Expression()/*@bgen(jjtree)*/
                     } catch (Throwable jjte001) {
                       if (jjtc001) {
                         jjtree.clearNodeScope(jjtn001);
                         jjtc001 = false;
                       } else {
                         jjtree.popNode();
                       }
                       if (jjte001 instanceof RuntimeException) {
                         throw (RuntimeException)jjte001;
                       }
                       if (jjte001 instanceof ParseException) {
                         throw (ParseException)jjte001;
                       }
                       throw (Error)jjte001;
                     } finally {
                       if (jjtc001) {
                         jjtree.closeNodeScope(jjtn001, true);
                         jjtreeCloseNodeScope(jjtn001);
                       }
                     }
/*@egen*/         ")"/*@bgen(jjtree) SynBlock */
                                              {
                                                YoyooSynBlock jjtn002 = new YoyooSynBlock(JJTSYNBLOCK);
                                                boolean jjtc002 = true;
                                                jjtree.openNodeScope(jjtn002);
                                                jjtreeOpenNodeScope(jjtn002);
                                              }
                                              try {
/*@egen*/ Block()/*@bgen(jjtree)*/
                                              } catch (Throwable jjte002) {
                                                if (jjtc002) {
                                                  jjtree.clearNodeScope(jjtn002);
                                                  jjtc002 = false;
                                                } else {
                                                  jjtree.popNode();
                                                }
                                                if (jjte002 instanceof RuntimeException) {
                                                  throw (RuntimeException)jjte002;
                                                }
                                                if (jjte002 instanceof ParseException) {
                                                  throw (ParseException)jjte002;
                                                }
                                                throw (Error)jjte002;
                                              } finally {
                                                if (jjtc002) {
                                                  jjtree.closeNodeScope(jjtn002, true);
                                                  jjtreeCloseNodeScope(jjtn002);
                                                }
                                              }
/*@egen*/         /*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}

void TryStatement():
/*
 * Semantic check required here to make sure that at least one
 * finally/catch is present.
 */
{/*@bgen(jjtree) TryStatement */
  YoyooTryStatement jjtn000 = new YoyooTryStatement(JJTTRYSTATEMENT);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
  jjtreeOpenNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) TryStatement */
  try {
/*@egen*/
  ("try"/*@bgen(jjtree) TryBlock */
         {
           YoyooTryBlock jjtn001 = new YoyooTryBlock(JJTTRYBLOCK);
           boolean jjtc001 = true;
           jjtree.openNodeScope(jjtn001);
           jjtreeOpenNodeScope(jjtn001);
         }
         try {
/*@egen*/ Block()/*@bgen(jjtree)*/
         } catch (Throwable jjte001) {
           if (jjtc001) {
             jjtree.clearNodeScope(jjtn001);
             jjtc001 = false;
           } else {
             jjtree.popNode();
           }
           if (jjte001 instanceof RuntimeException) {
             throw (RuntimeException)jjte001;
           }
           if (jjte001 instanceof ParseException) {
             throw (ParseException)jjte001;
           }
           throw (Error)jjte001;
         } finally {
           if (jjtc001) {
             jjtree.closeNodeScope(jjtn001, true);
             jjtreeCloseNodeScope(jjtn001);
           }
         }
/*@egen*/         )
  ( "catch" "(" FormalParameter() ")"/*@bgen(jjtree) CatchBlock */
                                      {
                                        YoyooCatchBlock jjtn002 = new YoyooCatchBlock(JJTCATCHBLOCK);
                                        boolean jjtc002 = true;
                                        jjtree.openNodeScope(jjtn002);
                                        jjtreeOpenNodeScope(jjtn002);
                                      }
                                      try {
/*@egen*/ Block()/*@bgen(jjtree)*/
                                      } catch (Throwable jjte002) {
                                        if (jjtc002) {
                                          jjtree.clearNodeScope(jjtn002);
                                          jjtc002 = false;
                                        } else {
                                          jjtree.popNode();
                                        }
                                        if (jjte002 instanceof RuntimeException) {
                                          throw (RuntimeException)jjte002;
                                        }
                                        if (jjte002 instanceof ParseException) {
                                          throw (ParseException)jjte002;
                                        }
                                        throw (Error)jjte002;
                                      } finally {
                                        if (jjtc002) {
                                          jjtree.closeNodeScope(jjtn002, true);
                                          jjtreeCloseNodeScope(jjtn002);
                                        }
                                      }
/*@egen*/            )*
  [ "finally"/*@bgen(jjtree) FinallyBlock */
              {
                YoyooFinallyBlock jjtn003 = new YoyooFinallyBlock(JJTFINALLYBLOCK);
                boolean jjtc003 = true;
                jjtree.openNodeScope(jjtn003);
                jjtreeOpenNodeScope(jjtn003);
              }
              try {
/*@egen*/ Block()/*@bgen(jjtree)*/
              } catch (Throwable jjte003) {
                if (jjtc003) {
                  jjtree.clearNodeScope(jjtn003);
                  jjtc003 = false;
                } else {
                  jjtree.popNode();
                }
                if (jjte003 instanceof RuntimeException) {
                  throw (RuntimeException)jjte003;
                }
                if (jjte003 instanceof ParseException) {
                  throw (ParseException)jjte003;
                }
                throw (Error)jjte003;
              } finally {
                if (jjtc003) {
                  jjtree.closeNodeScope(jjtn003, true);
                  jjtreeCloseNodeScope(jjtn003);
                }
              }
/*@egen*/              ]/*@bgen(jjtree)*/
  } catch (Throwable jjte000) {
    if (jjtc000) {
      jjtree.clearNodeScope(jjtn000);
      jjtc000 = false;
    } else {
      jjtree.popNode();
    }
    if (jjte000 instanceof RuntimeException) {
      throw (RuntimeException)jjte000;
    }
    if (jjte000 instanceof ParseException) {
      throw (ParseException)jjte000;
    }
    throw (Error)jjte000;
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
      jjtreeCloseNodeScope(jjtn000);
    }
  }
/*@egen*/
}




